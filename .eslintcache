[{"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/index.tsx":"1","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/serviceWorker.ts":"2","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/App.tsx":"3","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/i18n.tsx":"4","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/store/index.ts":"5","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/shared/apollo.ts":"6","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/theme.tsx":"7","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/auth/Register.tsx":"8","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/ToastMessage.tsx":"9","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/auth/AuthenticatedRoute.tsx":"10","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/auth/Login.tsx":"11","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/hooks/auth/useAmplifyAuth.tsx":"12","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/store/app/reducers.ts":"13","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/store/auth/reducers.ts":"14","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/shared/amplify.ts":"15","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/index.tsx":"16","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/welcome/index.tsx":"17","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/Spinner.tsx":"18","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/Config.tsx":"19","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/Avatar.tsx":"20","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/hooks/useQuery.tsx":"21","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/layout/Tile.tsx":"22","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/layout/AppWrapper.tsx":"23","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/ui/Button.tsx":"24","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/layout/PageWrapper.tsx":"25","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/ui/Heading.tsx":"26","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/hooks/emails/useSelectedEmail.ts":"27","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/EmailsReceivedToday.tsx":"28","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/Header.tsx":"29","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/UnreadEmails.tsx":"30","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/SideBar.tsx":"31","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/SubscriptionEmails.tsx":"32","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/welcome/ProfileForm.tsx":"33","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/shared/string.ts":"34","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/layout/AppBar.tsx":"35","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/store/app/actions.ts":"36","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/hooks/auth/useProfile.tsx":"37","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/store/auth/actions.ts":"38","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/EmailsList.tsx":"39","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/ui/AnchorLink.tsx":"40","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/translation/index.ts":"41","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/modal/NewSubscription.tsx":"42","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/hooks/subscriptions/useSelectedSubscription.tsx":"43","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/graphql/mutations.tsx":"44","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/SubscriptionsAccordion.tsx":"45","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/translation/ToggleLocale.tsx":"46","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/store/helpers.ts":"47","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/graphql/subscriptions.tsx":"48","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/graphql/queries.tsx":"49","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/CopyableText.tsx":"50","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/EmailListItem.tsx":"51","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/ToolTip.tsx":"52","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/ui/Pill.tsx":"53","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/hooks/subscriptions/useSubscriptions.tsx":"54","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/modal/EditSubscription.tsx":"55","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/hooks/shared/useToast.tsx":"56","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/Link.tsx":"57"},{"size":754,"mtime":1606509875395,"results":"58","hashOfConfig":"59"},{"size":5295,"mtime":1606509875396,"results":"60","hashOfConfig":"59"},{"size":1898,"mtime":1608339132199,"results":"61","hashOfConfig":"59"},{"size":1067,"mtime":1606930061146,"results":"62","hashOfConfig":"59"},{"size":610,"mtime":1606509875416,"results":"63","hashOfConfig":"59"},{"size":781,"mtime":1608262006847,"results":"64","hashOfConfig":"59"},{"size":2042,"mtime":1608389201231,"results":"65","hashOfConfig":"59"},{"size":513,"mtime":1606509875404,"results":"66","hashOfConfig":"59"},{"size":2578,"mtime":1608417244892,"results":"67","hashOfConfig":"59"},{"size":1064,"mtime":1606929444000,"results":"68","hashOfConfig":"59"},{"size":1590,"mtime":1606509875404,"results":"69","hashOfConfig":"59"},{"size":2719,"mtime":1608338732966,"results":"70","hashOfConfig":"59"},{"size":975,"mtime":1607354705245,"results":"71","hashOfConfig":"59"},{"size":717,"mtime":1606509875415,"results":"72","hashOfConfig":"59"},{"size":1109,"mtime":1607695466806,"results":"73","hashOfConfig":"59"},{"size":1924,"mtime":1608299606885,"results":"74","hashOfConfig":"59"},{"size":3445,"mtime":1608349935470,"results":"75","hashOfConfig":"59"},{"size":786,"mtime":1607729164269,"results":"76","hashOfConfig":"59"},{"size":2275,"mtime":1608350953999,"results":"77","hashOfConfig":"59"},{"size":914,"mtime":1608421676095,"results":"78","hashOfConfig":"59"},{"size":257,"mtime":1606509875412,"results":"79","hashOfConfig":"59"},{"size":960,"mtime":1607786738383,"results":"80","hashOfConfig":"59"},{"size":579,"mtime":1607786659379,"results":"81","hashOfConfig":"59"},{"size":844,"mtime":1606509875408,"results":"82","hashOfConfig":"59"},{"size":961,"mtime":1606509875407,"results":"83","hashOfConfig":"59"},{"size":737,"mtime":1607786632967,"results":"84","hashOfConfig":"59"},{"size":526,"mtime":1607695022644,"results":"85","hashOfConfig":"59"},{"size":843,"mtime":1607786844886,"results":"86","hashOfConfig":"59"},{"size":2878,"mtime":1608417232418,"results":"87","hashOfConfig":"59"},{"size":668,"mtime":1607786857143,"results":"88","hashOfConfig":"59"},{"size":2161,"mtime":1608334465661,"results":"89","hashOfConfig":"59"},{"size":995,"mtime":1607786863037,"results":"90","hashOfConfig":"59"},{"size":4830,"mtime":1608334729965,"results":"91","hashOfConfig":"59"},{"size":857,"mtime":1608417143907,"results":"92","hashOfConfig":"59"},{"size":2374,"mtime":1608334720438,"results":"93","hashOfConfig":"59"},{"size":787,"mtime":1607354717471,"results":"94","hashOfConfig":"59"},{"size":311,"mtime":1607435723055,"results":"95","hashOfConfig":"59"},{"size":1001,"mtime":1606509875415,"results":"96","hashOfConfig":"59"},{"size":6532,"mtime":1608423939263,"results":"97","hashOfConfig":"59"},{"size":685,"mtime":1607436720927,"results":"98","hashOfConfig":"59"},{"size":105,"mtime":1606509875410,"results":"99","hashOfConfig":"59"},{"size":2024,"mtime":1608411697974,"results":"100","hashOfConfig":"59"},{"size":610,"mtime":1607786720130,"results":"101","hashOfConfig":"59"},{"size":635,"mtime":1608262703506,"results":"102","hashOfConfig":"59"},{"size":2732,"mtime":1608417184443,"results":"103","hashOfConfig":"59"},{"size":731,"mtime":1606509875409,"results":"104","hashOfConfig":"59"},{"size":272,"mtime":1606509875414,"results":"105","hashOfConfig":"59"},{"size":313,"mtime":1607787742103,"results":"106","hashOfConfig":"59"},{"size":293,"mtime":1608388306312,"results":"107","hashOfConfig":"59"},{"size":996,"mtime":1608338665392,"results":"108","hashOfConfig":"59"},{"size":2296,"mtime":1608417192072,"results":"109","hashOfConfig":"59"},{"size":838,"mtime":1607992959742,"results":"110","hashOfConfig":"59"},{"size":673,"mtime":1608339489117,"results":"111","hashOfConfig":"59"},{"size":861,"mtime":1608256564422,"results":"112","hashOfConfig":"59"},{"size":5320,"mtime":1608411851047,"results":"113","hashOfConfig":"59"},{"size":521,"mtime":1608338196351,"results":"114","hashOfConfig":"59"},{"size":951,"mtime":1606509875409,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},"19vmhqr",{"filePath":"120","messages":"121","errorCount":5,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"119"},{"filePath":"123","messages":"124","errorCount":3,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"119"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"128","messages":"129","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"119"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"135","messages":"136","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"119"},{"filePath":"138","messages":"139","errorCount":26,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"119"},{"filePath":"141","messages":"142","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"119"},{"filePath":"144","messages":"145","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"119"},{"filePath":"147","messages":"148","errorCount":9,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"119"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"154","messages":"155","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"119"},{"filePath":"157","messages":"158","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"119"},{"filePath":"160","messages":"161","errorCount":10,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"119"},{"filePath":"163","messages":"164","errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"119"},{"filePath":"166","messages":"167","errorCount":5,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"119"},{"filePath":"169","messages":"170","errorCount":9,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"119"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"174","messages":"175","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"119"},{"filePath":"177","messages":"178","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"119"},{"filePath":"180","messages":"181","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"119"},{"filePath":"183","messages":"184","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"119"},{"filePath":"186","messages":"187","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"119"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"191","messages":"192","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"119"},{"filePath":"194","messages":"195","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"119"},{"filePath":"197","messages":"198","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"119"},{"filePath":"200","messages":"201","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"119"},{"filePath":"203","messages":"204","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"119"},{"filePath":"206","messages":"207","errorCount":15,"warningCount":1,"fixableErrorCount":3,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"119"},{"filePath":"209","messages":"210","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"119"},{"filePath":"212","messages":"213","errorCount":2,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"119"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"221","messages":"222","errorCount":18,"warningCount":3,"fixableErrorCount":1,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"119"},{"filePath":"224","messages":"225","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"119"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"229","messages":"230","errorCount":7,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"119"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"236","messages":"237","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"119"},{"filePath":"239","messages":"240","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"119"},{"filePath":"242","messages":"243","errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"119"},{"filePath":"245","messages":"246","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"119"},{"filePath":"248","messages":"249","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"119"},{"filePath":"251","messages":"252","errorCount":5,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"119"},{"filePath":"254","messages":"255","errorCount":21,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"119"},{"filePath":"257","messages":"258","errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"260"},{"filePath":"261","messages":"262","errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"119"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"266","messages":"267","errorCount":18,"warningCount":4,"fixableErrorCount":2,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"119"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"271","messages":"272","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"119"},"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/index.tsx",["274"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\nimport reduxStore from './store';\nimport App from './App';\nimport './i18n';\n\nconst { store, history } = reduxStore;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={history}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["275","276","277","278","279","280"],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/serviceWorker.ts",["281","282","283","284","285","286","287","288","289","290","291"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/App.tsx",["292","293","294"],"import React from 'react';\nimport { Box, Grommet } from 'grommet';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { ApolloProvider } from '@apollo/client';\nimport { ToastProvider } from 'react-toast-notifications';\n\n\nimport useAmplifyAuth from './hooks/auth/useAmplifyAuth';\nimport AuthenticatedRoute from './components/auth/AuthenticatedRoute';\nimport Dashboard from './components/dashboard';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Welcome from './components/welcome';\n\nimport { RootState } from './store';\nimport theme from './theme';\nimport client from './shared/apollo';\n\nimport ToastMessage from './components/shared/ToastMessage'\nimport Spinner from 'components/shared/Spinner';\n\nconst App = () => {\n  const { initilized } = useAmplifyAuth();\n  const { mode } = useSelector((st: RootState) => st.app);\n\n  const renderLoading = () => (\n    <Box align=\"center\" justify=\"center\" fill>\n      <Spinner />\n    </Box>\n  )\n\n  return (\n    <ApolloProvider client={client}>\n      <React.Suspense fallback=\"loading\">\n        <Grommet theme={theme} themeMode={mode} full>\n          <ToastProvider components={{ Toast: ToastMessage }} autoDismiss autoDismissTimeout={10000}>\n            {initilized ? (\n              <Switch>\n                <Route path=\"/register\" component={Register} />\n                <Route path=\"/login\" component={Login} />\n                <Redirect path=\"/signout\" to=\"/\" />\n                <Redirect path=\"/\" exact to=\"/today\" />\n                <AuthenticatedRoute path=\"/welcome\" component={Welcome} />\n                <AuthenticatedRoute path=\"*\" component={Dashboard} />\n              </Switch>\n            ) : renderLoading()}\n          </ToastProvider>\n        </Grommet>\n      </React.Suspense>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/i18n.tsx",[],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/store/index.ts",["295"],"// src/store/index.ts\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\n\n\nimport appReducer from './app/reducers'\nimport authReducer from './auth/reducers'\n\nconst history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n  auth: authReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\n\nconst configureStore = () => {\n  const store = createStore(rootReducer, applyMiddleware(thunk));\n  return {\n    store,\n    history\n  }\n}\n\nexport default configureStore();\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/shared/apollo.ts",[],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/theme.tsx",[],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/auth/Register.tsx",["296","297"],"import React from 'react';\n\nimport { Auth } from '../../shared/amplify';\nimport GoogleIcon from '../../images/google-g-icon.png';\n\ninterface Props {}\n\nconst Register: React.FC<Props> = (props) => {\n  return (\n    <>\n    <h1>Register!!</h1>\n    <button\n    onClick={() => Auth.federatedSignIn({ provider: 'Google' } as any)}\n     type=\"button\"\n     className=\"\">\n       <img src={GoogleIcon} className=\"storage-icon mr-2\" alt=\"view in drive\" /> Log in with Google</button>\n    </>\n  );\n};\nexport default Register;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/ToastMessage.tsx",["298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323"],"import React from 'react';\nimport moment from 'moment';\nimport { Box, Text, Grommet, Button, Heading } from 'grommet';\nimport { Close as CloseIcon } from 'grommet-icons';\nimport { useSelector } from 'react-redux';\n\nimport { RootState } from '../../store';\nimport theme from '../../theme';\nimport Avatar from '../shared/Avatar';\n\ntype ToastWrapperProps = {\n  appearance?: 'success' | 'error';\n}\n\nconst ToastWrapper: React.FC<ToastWrapperProps> = (props) => {\n  const { mode } = useSelector((st: RootState) => st.app);\n\n  const colors = {\n    success: 'green',\n    error: 'red',\n    brand: 'brand'\n  };\n\n  return (\n    <Grommet theme={theme} themeMode={mode}>\n      <Box\n        elevation=\"medium\"\n        width=\"medium\"\n        background=\"light-1\"\n        margin={{ top: 'xlarge' }}\n        border={{ side: 'left', size: '6px', color: colors[props.appearance || 'brand'] }}\n        pad=\"small\"\n      >\n        {props.children}\n      </Box>\n    </Grommet>\n  )\n}\n\nconst ToastMessage: React.FC<any> = (props) => {\n  if (props.appearance !== 'info') {\n    const { heading, message } = props.children\n    return (\n      <ToastWrapper {...props} appearance={props.appearance}>\n        <Box pad=\"small\" align=\"start\">\n          {heading && <Heading level=\"5\">{heading}</Heading>}\n          {message && <Text>{message}</Text>}\n        </Box>\n      </ToastWrapper >\n    );\n  }\n\n  const { email, subscription } = props.children;\n  return (\n    <ToastWrapper>\n      <Box justify=\"between\" direction=\"row\" align=\"center\">\n        <Box flex direction=\"row\" align=\"center\" margin={{ bottom: 'small' }}>\n          <Avatar\n            margin={{ right: 'xsmall' }}\n            size=\"small\"\n            src={subscription.iconUrl}\n            color={subscription.color}\n            name={subscription.name}\n          />\n          <Box flex>\n            <Text size=\"small\">{subscription.name}</Text>\n          </Box>\n        </Box>\n\n        <Box flex={false}>\n          <Button icon={<CloseIcon size=\"small\" />} onClick={props.onDismiss} />\n        </Box>\n      </Box>\n\n      <Box alignSelf=\"start\">\n        <Text size=\"small\">\n          {moment(email.receivedAt) //.format()\n            .calendar({\n              sameDay: 'h:mm a',\n              lastDay: '[Yesterday at ] h:mm a',\n              lastWeek: 'dddd',\n              sameElse: 'MMM DD Do'\n            })\n          }\n        </Text>\n\n        <Text size=\"medium\" weight=\"bold\">{email.subject}</Text>\n      </Box>\n    </ToastWrapper>\n  );\n}\n\nToastMessage.defaultProps = {\n\n};\n\nToastMessage.propTypes = {\n\n};\n\nexport default ToastMessage;\n\n\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/auth/AuthenticatedRoute.tsx",["324","325","326","327"],"import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect, useLocation, RouteComponentProps } from 'react-router-dom';\nimport AppWrapper from '../layout/AppWrapper';\nimport useQuery from '../../hooks/useQuery';\nimport { RootState } from '../../store';\n\ninterface Props {\n  component: React.FC<any>;\n  [key: string]: any;\n}\n\nconst AuthenticatedRoute = ({ component: Component, ...rest }: Props) => {\n  const { isAuthenticated } = useSelector((st: RootState) => st.auth);\n  const location = useLocation();\n  const { returnTo } = useQuery();\n\n  const renderRoute = (props: RouteComponentProps<any>) => {\n    if (!isAuthenticated) {\n      return <Redirect to={`/login?returnTo=${location.pathname}${location.search}`} />\n    };\n\n    if (returnTo) {\n      return <Redirect to={returnTo} />\n    }\n\n    return location.pathname.startsWith('/welcome')\n      ? <Component {...props} />\n      : <AppWrapper><Component {...props} /></AppWrapper>\n  }\n\n  return <Route {...rest} render={renderRoute} />\n}\n\nexport default AuthenticatedRoute;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/auth/Login.tsx",["328"],"import { Box, ResponsiveContext } from 'grommet';\nimport { CognitoHostedUIIdentityProvider } from '@aws-amplify/auth';\nimport React from 'react';\n\nimport { Auth } from '../../shared/amplify';\nimport GoogleIcon from '../../images/google-g-icon.png';\nimport PageWrapper from '../layout/PageWrapper';\nimport Tile from '../layout/Tile';\nimport Button from '../shared/ui/Button';\nimport Heading from '../shared/ui/Heading';\n\nimport Config from '../../Config';\n\ninterface Props { }\n\nexport const responsiveRows = {\n  small: ['auto', 'auto', 'auto', 'auto', 'auto'],\n  medium: ['auto', 'auto', 'auto'],\n  large: ['auto', 'auto'],\n} as any;\n\nexport const responsiveColumns = {\n  small: ['flex'],\n  medium: ['flex', 'flex', 'flex'],\n  large: ['flex', 'flex', 'flex', 'flex'],\n} as any;\n\n\nconst Login: React.FC<Props> = () => {\n  const size = React.useContext(ResponsiveContext);\n\n  return (\n    <PageWrapper>\n      <Box align=\"center\" margin={{ top: \"large\" }}>\n        <Tile width={size} animation=\"fadeIn\" pad=\"large\" justify=\"center\">\n          <Heading\n            level={3}\n            i18nKey=\"auth.Login.loginToApp\"\n            i18nValues={{ appName: Config.appName }}\n          />\n          <Button\n            icon={<img\n              src={GoogleIcon}\n              style={{ width: '24px' }}\n              alt=\"View in Drive\"\n            />}\n            onClick={() => Auth.federatedSignIn({ provider: CognitoHostedUIIdentityProvider.Google })}\n            i18nKey=\"auth.Login.continueWithGoogle\"\n          />\n        </Tile>\n      </Box >\n    </PageWrapper >\n  );\n};\nexport default Login;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/hooks/auth/useAmplifyAuth.tsx",["329","330","331","332","333","334","335","336","337"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { CognitoUser } from '@aws-amplify/auth';\nimport { Hub, Auth } from '../../shared/amplify';\nimport Config from 'Config';\nimport { useHistory } from 'react-router-dom';\n\nconst useAmplifyAuth = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [initilized, setInitilized] = React.useState(false);\n  const [isAuthenticated, setIsAuthenticated] = React.useState(false);\n\n  const handleUserLogin = async (auth: CognitoUser) => {\n    const user = await new Promise((resolve, reject) => {\n      auth.getUserAttributes((err, res) => {\n        if (err || !res) {\n          reject(err);\n          return;\n        }\n\n        const userProfile = res.reduce<{ [key: string]: any }>((usr, attr) => {\n          const nextUsr = usr;\n          if (attr.getName() === 'sub') {\n            nextUsr.id = `USER#${attr.getValue()}`;\n          } else {\n            nextUsr[attr.getName()] = attr.getValue();\n          }\n          return nextUsr;\n        }, {})\n        resolve(userProfile);\n\n      })\n    });\n\n    dispatch({\n      type: 'auth.authenticatedUser.set',\n      payload: user,\n    });\n\n    if (!(user as any)['custom:subdomain']) {\n      history.push('/welcome')\n    }\n\n    setInitilized(true);\n  }\n\n  React.useEffect(() => {\n    Hub.listen('auth', (evt) => {\n      const { payload: { event, data } } = evt;\n      switch (event) {\n        case 'signIn':\n          handleUserLogin(data);\n          setIsAuthenticated(true);\n          break;\n        case 'signOut':\n          setIsAuthenticated(false);\n          break;\n        case 'customOAuthState':\n          // console.log('customOAuthState:', data);\n          break;\n        default:\n          break;\n      }\n    });\n\n    Auth.currentAuthenticatedUser()\n      .then(async user => {\n        if (user) {\n          // console.log('user:', user)\n          //Get the current session from aws amplify\n          const session = await Auth.currentSession();\n          // console.log('session:', session)\n          if (chrome) {\n            chrome.runtime.sendMessage(\n              Config.extensions.chrome.id,\n              { session },\n              (response: any) => true // console.log('got a response', response)\n            );\n          }\n\n          handleUserLogin(user);\n        }\n      }).catch(error => {\n        // console.log('currentAuthenticatedUsererror:', error);\n\n        if (chrome) {\n          chrome.runtime.sendMessage(\n            Config.extensions.chrome.id,\n            {}\n          );\n        }\n        setInitilized(true);\n      })\n    // eslint-disable-next-line\n  }, []);\n\n  return { initilized, isAuthenticated }\n}\nexport default useAmplifyAuth;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/store/app/reducers.ts",[],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/store/auth/reducers.ts",[],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/shared/amplify.ts",["338"],"import Amplify, { Hub } from '@aws-amplify/core';\nimport Auth from '@aws-amplify/auth';\nimport Storage from '@aws-amplify/storage';\nimport { API, graphqlOperation } from '@aws-amplify/api';\nimport Config from '../Config';\n\n// Amplify.Logger.LOG_LEVEL = 'VERBOSE';\n// (window as any).LOG_LEVEL = 'DEBUG'\n\n//graphql config required in the amplify.config root as explained in the docs\nAmplify.configure({\n  ...Config.Amplify,\n  // Auth: Config.Amplify.Auth,\n  // Storage: Config.Amplify.Storage,\n  aws_appsync_graphqlEndpoint: Config.Amplify.AppSync.endpoint,\n  aws_appsync_authenticationType: 'AMAZON_COGNITO_USER_POOLS',\n  aws_appsync_region: 'us-east-1',\n})\n\nAuth.configure(Config.Amplify.Auth)\nStorage.configure(Config.Amplify.Storage)\n\nAPI.configure({\n  endpoints: [\n    {\n      name: \"remotejobs-api\",\n      endpoint: \"https://pwoxb07r8h.execute-api.us-east-1.amazonaws.com/prod/\",\n      custom_header: async () => {\n        return { Authorization: `Bearer ${(await Auth.currentSession()).getIdToken().getJwtToken()}` }\n      }\n    },\n  ]\n})\n\nexport { Amplify, Auth, API, Hub, graphqlOperation, Storage };\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/index.tsx",["339"],"import React from 'react';\nimport { Box, Grid } from 'grommet';\nimport { Route, Switch } from 'react-router-dom';\n\nimport SideBar from './SideBar';\nimport SubscriptionEmails from './SubscriptionEmails';\nimport EmailsReceivedToday from './EmailsReceivedToday';\nimport UnreadEmails from './UnreadEmails';\nimport Header from './Header';\n\nimport useSelectedEmail from '../../hooks/emails/useSelectedEmail';\n\n\nconst Dashboard: React.FC = () => {\n  const { selectedEmail } = useSelectedEmail();\n  const iframeRef = React.useRef<any>();\n  return (\n    <>\n      <Grid\n        fill\n        style={{ minHeight: '100vh' }}\n        columns={['20%', '30%', '50%']}\n        rows={['70px', 'flex']}\n        areas={[\n          { name: 'header', start: [0, 0], end: [2, 0] },\n          { name: 'left', start: [0, 1], end: [0, 1] },\n          { name: 'center', start: [1, 1], end: [1, 1] },\n          { name: 'main', start: [2, 1], end: [2, 1] },\n        ]}\n      >\n        <Header />\n        <SideBar />\n        <Box\n          overflow={{ vertical: 'auto' }}\n          // background={{ dark: 'dark-6' }}\n          // border={{\n\n          //   color: { dark: 'dark-4', light: 'light-4' },\n          //   side: 'right'\n          // }}\n          gridArea=\"center\"\n        >\n\n          <Switch>\n            <Route path=\"/today\" exact component={EmailsReceivedToday} />\n            <Route path=\"/unread\" exact component={UnreadEmails} />\n            <Route path=\"/subscription\" component={SubscriptionEmails} />\n          </Switch>\n        </Box>\n        <Box gridArea=\"main\" background=\"light-1\" fill>\n          {selectedEmail && (\n            <iframe\n              ref={(r: any) => { iframeRef.current = r; }}\n              style={{ height: '100%' }}\n              frameBorder=\"0\"\n              srcDoc={decodeURI(selectedEmail.body)} title=\"email content\" />\n          )}\n        </Box>\n      </Grid>\n    </>\n  );\n};\n\nexport default Dashboard;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/welcome/index.tsx",["340","341","342","343","344","345","346","347","348","349"],"import React from 'react';\nimport { Anchor, Box, Button, Heading, Text } from 'grommet';\nimport ProfileForm, { FormFields as ProfileFormFields } from './ProfileForm';\nimport useProfile from 'hooks/auth/useProfile';\nimport { useHistory } from 'react-router-dom';\n\ntype Props = {}\n\nconst Welcome: React.FC<Props> = (props) => {\n  const { profile } = useProfile();\n  const history = useHistory();\n\n  const [visiblePage, setVisiblePage] = React.useState<'profile' | 'payment' | 'welcome'>('welcome')\n\n  const titles = {\n    profile: 'Complete your profile',\n    payment: 'Payment',\n    welcome: 'Welcome'\n  }\n\n  return (\n    <Box fill align=\"center\" justify=\"center\">\n      <Box align=\"center\">\n        <Heading level=\"3\" margin={{ bottom: 'medium' }}>\n          {titles[visiblePage]}\n        </Heading>\n        <Box border={{ side: 'all', color: 'light-5' }} pad=\"medium\" fill>\n          {visiblePage === 'profile' && (\n            <Box animation=\"fadeIn\">\n              <ProfileForm\n                values={{\n                  name: profile ? `${profile.given_name} ${profile.family_name}` : '',\n                  subdomain: '',\n                  agreeToTerms: false\n                }}\n                onSubmit={(input: ProfileFormFields) => {\n                  setVisiblePage('payment');\n                }} />\n            </Box>\n          )}\n\n          {visiblePage === 'payment' && (\n            <Box animation=\"fadeIn\">\n              <Heading level=\"5\">thru is currently in beta and payment is not required</Heading>\n\n              <Box\n                tag=\"footer\"\n                margin={{ top: \"small\" }}\n                direction=\"row\"\n                justify=\"end\"\n              >\n                <Button label=\"Next\" onClick={() => setVisiblePage('welcome')} />\n              </Box>\n            </Box>\n          )}\n          {visiblePage === 'welcome' && (\n            <Box animation=\"fadeIn\" style={{ maxWidth: 500 }}>\n              <Heading level=\"3\">Welcome to thru<span style={{ color: '#de8626' }}>.</span></Heading>\n              <Text margin={{ 'bottom': 'medium' }}>Thank you for being one of the very first people to try out <b>thru</b>!</Text>\n              <Text margin={{ 'bottom': 'medium' }}><b>thru<span style={{ color: '#de8626' }}>.</span></b> is in public beta and we are still working out some of the kinks. If you notice something wonky or have feedback, drop us at line to <Anchor href=\"mailto:beta@cole.thru.email\">beta@cole.thru.email</Anchor></Text>\n              <Text margin={{ 'bottom': 'medium' }}>Thanks,</Text>\n              <Text margin={{ 'bottom': 'medium' }}>Cole - thru<span style={{ color: '#de8626' }}>.</span> founder</Text>\n\n              {/* <Heading level=\"5\">thru currently requires the thru Chrome extension</Heading>\n              <Text margin={{ 'bottom': 'medium' }}>In order to be able to create new thru subscriptions, you will need to download the Chrome extension.</Text>\n              <Anchor href=\"https://chrome.google.com/webstore/category/extensions?hl=en\" target=\"_blank\">Download the extension</Anchor> */}\n\n              <Box\n                tag=\"footer\"\n                margin={{ top: \"small\" }}\n                direction=\"row\"\n                justify=\"end\"\n              >\n                <Button label=\"Get Started\" onClick={() => history.push('/')} />\n              </Box>\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Welcome;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/Spinner.tsx",["350","351"],"import React from \"react\";\nimport { Box } from \"grommet\";\nimport theme from '../../theme';\nconst spinning = (\n  <svg\n    version=\"1.1\"\n    viewBox=\"0 0 32 32\"\n    width=\"28px\"\n    height=\"28px\"\n    fill={theme.global.colors.brand}\n  >\n    <path\n      opacity=\".25\"\n      d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\"\n    />\n    <path d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\">\n      <animateTransform\n        attributeName=\"transform\"\n        type=\"rotate\"\n        from=\"0 16 16\"\n        to=\"360 16 16\"\n        dur=\"0.8s\"\n        repeatCount=\"indefinite\"\n      />\n    </path>\n  </svg>\n);\n\nexport const Spinner = () => (\n\n  <Box align=\"center\" justify=\"center\" margin=\"medium\">\n    {spinning}\n  </Box>\n);\n\nexport default Spinner;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/Config.tsx",["352","353","354","355","356","357"],"// (window as any).LOG_LEVEL = 'DEBUG';\n\ninterface Config {\n  appName: string;\n  appUrl: string;\n  environment: 'production' | 'test' | 'development'\n  Amplify: {\n    API: { [key: string]: any };\n    AppSync: { [key: string]: any };\n    Auth: { [key: string]: any };\n    Storage: { [key: string]: any };\n  },\n  extensions: {\n    chrome: {\n      id: string;\n    }\n  }\n}\n\nconst Config: Config = {\n  appName: 'thru',\n  appUrl: process.env.REACT_APP_AppUrl || 'http://localhost:3000/',\n  environment: process.env.NODE_ENV || 'development',\n  Amplify: {\n    API: {},\n    Storage: {\n      AWSS3: {\n        bucket: process.env.REACT_APP_S3EmailBucket  || 'dev-readthenews-processed-email',\n        // identityPoolId: process.env.REACT_APP_AmplifyAuthIdenitityPoolId || 'us-east-1:f116f18a-eb3e-474e-87ac-4d8e0b558954',\n        region: process.env.REACT_APP_AmplifyAuthRegion || 'us-east-1'\n      }\n    },\n    AppSync: {\n      endpoint: `https://${process.env.REACT_APP_GraphQLEndpoint || 'zq2wc5kc7ndqxd7u3onmxpahnu.appsync-api.us-east-1.amazonaws.com/graphql'}`,\n      ws: `wss://${process.env.REACT_APP_GraphQLEndpoint || 'zq2wc5kc7ndqxd7u3onmxpahnu.appsync-api.us-east-1.amazonaws.com/graphql'}`,\n    },\n    Auth: {\n      region: process.env.REACT_APP_AmplifyAuthRegion || 'us-east-1',\n      userPoolWebClientId: process.env.REACT_APP_AmplifyAuthUserPoolWebClientId || '7ffrdh26nrqn1fio0qbdt1cns7',\n      userPoolId: process.env.REACT_APP_AmplifyAuthUserPoolId || 'us-east-1_eRAC5lnIb',\n      identityPoolId: process.env.REACT_APP_AmplifyAuthIdenitityPoolId || 'us-east-1:f116f18a-eb3e-474e-87ac-4d8e0b558954',\n      oauth: {\n        domain: process.env.REACT_APP_AmplifyOauthDomain || 'dev-readthenews.auth.us-east-1.amazoncognito.com',\n        scope: ['email', 'profile', 'openid', 'aws.cognito.signin.user.admin'],\n        redirectSignIn: process.env.REACT_APP_AmplifyOauthRedirectSignInUrl || 'http://localhost:3000/',\n        redirectSignOut: process.env.REACT_APP_AmplifyOauthRedirectSignOutUrl || 'http://localhost:3000/signout',\n        responseType: 'code',\n        federationTarget: 'Google',\n      },\n    }\n  },\n  extensions: {\n    chrome: {\n      id: process.env.REACT_APP_ExtensionsChromeId || 'ngffffpnaojkieodkhefemdopebggjip',\n    }\n  }\n}\n\nexport default Config;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/Avatar.tsx",["358","359","360","361","362","363","364","365","366","367"],"import React from 'react';\nimport { Text, Avatar as GAvatar, AvatarProps, BoxProps } from 'grommet';\n\nimport { getInitialsFromWords } from '../../shared/string';\nimport { randomProperty } from '../../shared/object';\n\ntype CompiledAvatarProps = BoxProps & AvatarProps & JSX.IntrinsicElements['div']\n\ninterface Props extends CompiledAvatarProps {\n  url?: string;\n  name?: string;\n  color?: string;\n}\n\nconst Avatar: React.FC<Props> = (props) => {\n  const { name, url, color, ...restProps } = props;\n  const initials = name && getInitialsFromWords(name, 2);\n\n  return (\n    <GAvatar\n      margin={{ right: 'xsmall' }}\n      size=\"small\"\n      {...restProps}\n      background={color || (url ? undefined : 'light-3')}\n      src={url}\n    >\n      {(name && !url) && <Text size={props.size || \"small\"}>{initials}</Text>}\n    </GAvatar>\n  );\n}\n\nAvatar.defaultProps = {\n\n};\n\nAvatar.propTypes = {\n\n};\n\nexport default Avatar;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/hooks/useQuery.tsx",[],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/layout/Tile.tsx",["368"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, BoxProps} from 'grommet';\n\ninterface Props extends BoxProps {\n  children: any;\n  title?: string;\n  width?: string;\n}\n\nconst Tile: React.FC<Props> = ({ children, title, ...restProps }) => (\n  // eslint-disable-next-line\n  <Box elevation=\"medium\" {...restProps}>\n    {/* <Box\n      tag=\"header\"\n      pad={{ horizontal: 'small', top: 'small', bottom: 'medium' }}\n      direction=\"row\"\n      justify=\"between\"\n      align=\"center\"\n    >\n      <Heading level={3} size=\"xsmall\" margin=\"none\">\n        {title}\n      </Heading>\n      <Button icon={<More color=\"control\" />} />\n    </Box> */}\n    {children}\n  </Box>\n);\n\nTile.defaultProps = {\n  title: undefined,\n  width: undefined,\n}\n\nTile.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  width: PropTypes.string,\n  title: PropTypes.string\n}\n\nexport default Tile;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/layout/AppWrapper.tsx",["369"],"import React from 'react';\nimport PropTypes from 'prop-types';\n// import AppBar from './AppBar';\n\ninterface Props { }\nconst AppWrapper: React.FC<Props> = (props) => {\n  const { children } = props;\n\n  return (\n    <>\n      {/* <AppBar /> */}\n      {/* <Box\n        align='center'\n        justify='center'\n        flex=\"grow\"\n        direction='row'\n      > */}\n        {children}\n      {/* </Box> */}\n    </>\n  );\n};\n\nAppWrapper.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n}\nexport default AppWrapper;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/ui/Button.tsx",["370","371","372"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button as GrommetButton } from 'grommet';\nimport { useTranslation } from '../translation';\n\ninterface Props {\n  children?: any;\n  icon?: JSX.Element;\n  label?: string;\n  i18nKey: string;\n  onClick: () => void;\n}\n\nconst Button: React.FC<Props> = (props) => {\n  const { t } = useTranslation();\n  const { i18nKey, children, icon, onClick } = props;\n\n  if (!children && !i18nKey) {\n    throw new Error('Must have children or a translation key');\n  }\n  return (\n    <GrommetButton\n      primary\n      icon={icon}\n      onClick={onClick}\n      label={t(i18nKey)}\n    />\n  )\n};\n\nButton.defaultProps = {\n  icon: undefined,\n};\n\nButton.propTypes = {\n  i18nKey: PropTypes.string.isRequired,\n  icon: PropTypes.element,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/layout/PageWrapper.tsx",["373"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Main } from 'grommet';\nimport { PadType } from 'grommet/utils';\nimport AppBar from './AppBar';\n\ninterface Props {\n  children: any;\n  hideAppBar?: boolean;\n  pad?: PadType;\n}\n\nconst PageWrapper: React.FC<Props> = (props) => {\n  const { children, hideAppBar, pad } = props;\n  return (\n    <Main\n      // background={{ \"dark\": \"dark-1\", \"light\": \"white\" }}\n      // background={{ \"dark\": \"dark-1\", \"light\": \"#95ff98\" }}\n      pad={pad}\n    >\n      {!hideAppBar && <AppBar />}\n      {children}\n    </Main>\n  );\n};\n\nPageWrapper.defaultProps = {\n  hideAppBar: false,\n  pad: { horizontal: \"large\", vertical: \"small\" },\n};\n\nPageWrapper.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  pad: PropTypes.object,\n  hideAppBar: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n}\nexport default PageWrapper;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/ui/Heading.tsx",["374","375"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Heading as GrommetHeading } from 'grommet';\nimport { useTranslation } from '../translation';\n\ninterface Props {\n  i18nKey: string\n  i18nValues?: { [key: string]: string };\n  level?: number;\n}\n\nconst Button: React.FC<Props> = (props) => {\n  const { i18nKey, i18nValues, level } = props;\n  const { t } = useTranslation();\n  return (\n    <GrommetHeading level={level as any}>\n      {t(i18nKey, i18nValues)}\n    </GrommetHeading>\n  )\n};\n\nButton.defaultProps = {\n  level: 3,\n  // i18nValues: {},\n};\n\nButton.propTypes = {\n  i18nKey: PropTypes.string.isRequired,\n  // i18nValues: PropTypes.objectOf(PropTypes.string),\n  level: PropTypes.number,\n};\n\nexport default Button;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/hooks/emails/useSelectedEmail.ts",[],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/EmailsReceivedToday.tsx",["376"],"import React from 'react';\nimport moment from 'moment';\nimport { gql } from '@apollo/client';\n\nimport useSelectedEmail from '../../hooks/emails/useSelectedEmail';\nimport EmailsList from './EmailsList';\n\ninterface Props { }\n\nconst query = gql`\n  query GetEmailsOfSubscription($startDate: String!) {\n    listEmails(filter: { receivedAt: { gt: $startDate } }, limit: 50) {\n      items {\n        body\n        fromAddress\n        id\n        subscriptionId\n        read\n        receivedAt\n        subject\n      }\n    }\n  }\n`;\n\nconst EmailsReceivedToday: React.FC<Props> = () => {\n  const { setSelectedEmail } = useSelectedEmail();\n  return (\n    <EmailsList\n      onEmailClick={setSelectedEmail}\n      query={query}\n      queryVars={{ variables: { startDate: moment().startOf('week').format() } }}\n    />\n  )\n};\n\nexport default EmailsReceivedToday;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/Header.tsx",["377","378","379"],"import React from 'react';\nimport {\n  Heading,\n  Menu,\n  Header as GHeader,\n  Box,\n  Text,\n  DropButton,\n} from 'grommet';\n\nimport { Inbox, FormDown as FormDownIcon } from 'grommet-icons';\nimport { useDispatch } from 'react-redux';\n\nimport useProfile from '../../hooks/auth/useProfile';\nimport AuthState from '../../store/auth/actions';\n// import { setMode } from '../../store/app/actions';\nimport Avatar from '../shared/Avatar';\nimport NewSubscription from './modal/NewSubscription';\n\nconst Header: React.FC = () => {\n  const dispatch = useDispatch();\n  const { mode, profile } = useProfile();\n  const [newSubFormOpen, setNewSubFormOpen] = React.useState<boolean>(false);\n\n  const handleSignoutClick = () => {\n    dispatch(AuthState.actions.signOut());\n  };\n\n  return (\n    <GHeader\n      gridArea=\"header\"\n      border={{ side: 'horizontal', color: { dark: 'dark-4', light: 'light-4' } }}\n      pad={{ horizontal: 'medium' }}\n      background={{ color: { dark: 'dark-3', light: 'light-2' } }}\n    >\n      <Heading level={1} margin=\"none\">thru<span style={{ color: '#de8626' }}>.</span></Heading>\n\n      <Box direction=\"row\">\n        <Box fill={false} margin={{ right: 'medium' }}>\n          <DropButton\n            label={<Text size=\"small\">New Tray</Text>}\n            open={newSubFormOpen}\n            onClick={() => setNewSubFormOpen(open => !open)}\n            icon={<Inbox size=\"medium\" />}\n            dropAlign={{ top: 'bottom', right: 'right' }}\n            dropContent={\n              <Box pad=\"small\" background=\"light-2\" >\n                <NewSubscription onSubmit={() => setNewSubFormOpen(false)} />\n              </Box>\n            }\n          />\n        </Box>\n        <Menu\n          plain\n          dropProps={{ align: { 'top': 'bottom' } }}\n          items={[\n            // {\n            //   label: `Switch to ${mode === 'light' ? 'dark' : 'light'} mode`, onClick: () => {\n            //     dispatch(setMode(mode === 'light' ? 'dark' : 'light'));\n            //   }\n            // },\n            { label: 'Signout', onClick: handleSignoutClick }\n          ]}\n        >\n          {() => (\n            <Box flex direction=\"row\" align=\"center\" justify=\"center\">\n              <Avatar\n                size=\"small\"\n                margin={{ right: 'small' }}\n                name={profile && `${profile.family_name} ${profile.given_name}`}\n                url={profile && profile.picture}\n              />\n              {' '}\n              <Heading margin=\"none\" level=\"6\" >\n                {profile ? `${profile.given_name} ${profile.family_name}` : 'User'}\n              </Heading>\n              <Box margin={{ left: 'small' }}>\n                <FormDownIcon color=\"brand\" />\n              </Box>\n            </Box>\n          )}\n        </Menu>\n      </Box>\n    </GHeader>\n  );\n}\n\nHeader.defaultProps = {\n\n};\n\nHeader.propTypes = {\n\n};\n\nexport default Header;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/UnreadEmails.tsx",["380"],"import React from 'react';\nimport { gql } from '@apollo/client';\n\nimport EmailsList from './EmailsList';\nimport useSelectedEmail from '../../hooks/emails/useSelectedEmail';\n\nconst query = gql`\n  query GetEmailsOfSubscription {\n    listEmails(filter: { read: { eq: false }}, limit: 50) {\n      items {\n        body\n        fromAddress\n        id\n        subscriptionId\n        read\n        receivedAt\n        subject\n      }\n    }\n  }\n`;\n\nconst SubscriptionsList: React.FC = () => {\n  const { setSelectedEmail } = useSelectedEmail();\n\n  return (\n    <EmailsList\n      onEmailClick={setSelectedEmail}\n      query={query}\n    />\n  )\n};\n\nexport default SubscriptionsList;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/SideBar.tsx",["381"],"import React from 'react';\nimport { Box, Nav } from 'grommet';\nimport { useLocation } from 'react-router-dom';\n\nimport {\n  Inbox as InboxIcon,\n  Calendar as CalendarIcon,\n} from \"grommet-icons\"\n\nimport SubscriptionsAccordion from './SubscriptionsAccordion';\nimport AnchorLink from '../shared/ui/AnchorLink';\nimport useSelectedSubscription from '../../hooks/subscriptions/useSelectedSubscription';\n\ninterface Props { }\n\nconst SideBar: React.FC<Props> = () => {\n  const location = useLocation();\n  const { setSelectedSubscription } = useSelectedSubscription();\n\n  const handleLinkClick = () => {\n    setSelectedSubscription(undefined);\n  };\n\n  return (\n    <Box\n      gridArea=\"left\"\n      flex=\"grow\"\n      // pad=\"small\"\n      background={{ dark: 'dark-2', light: 'light-1' }}\n      fill\n    // border={{\n    //   color: { 'dark': 'dark-3', light: 'light-4' },\n    //   side: 'right'\n    // }}\n    >\n      <Nav margin={{ top: \"medium\", horizontal: \"small\" }}>\n        <Box background={location.pathname === '/unread' ? 'light-3' : undefined} pad=\"small\" round=\"xsmall\">\n          <AnchorLink\n            onClick={handleLinkClick}\n            to=\"/unread\"\n            label=\"Unread\"\n            margin={{ bottom: 'none' }}\n            icon={<InboxIcon />}\n            size=\"small\"\n            color={{\n              dark: `light-${location.pathname === '/unread' ? '2' : '6'}`,\n              light: `dark-${location.pathname === '/unread' ? '2' : '6'}`\n            }}\n          />\n        </Box>\n        <Box background={location.pathname === '/today' ? 'light-3' : undefined} pad=\"small\" round=\"xsmall\">\n          <AnchorLink\n            onClick={handleLinkClick}\n            margin={{ bottom: 'none' }}\n            to=\"/today\"\n            label=\"Today\"\n            icon={<CalendarIcon />}\n            size=\"small\"\n            color={{\n              dark: `light-${location.pathname === '/today' ? '2' : '6'}`,\n              light: `dark-${location.pathname === '/today' ? '2' : '6'}`\n            }}\n          />\n        </Box>\n      </Nav>\n      <Box fill pad=\"small\">\n        <SubscriptionsAccordion />\n      </Box>\n    </Box>\n  )\n};\n\nexport default SideBar;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/SubscriptionEmails.tsx",["382"],"import React from 'react';\nimport { gql } from '@apollo/client';\n\nimport EmailsList from './EmailsList';\nimport useSelectedSubscription from '../../hooks/subscriptions/useSelectedSubscription';\nimport useSelectedEmail from '../../hooks/emails/useSelectedEmail';\n\nconst query = gql`\n  query GetEmailsOfSubscription($subscriptionId: String!) {\n    listEmails(id: $subscriptionId, limit: 50) {\n      items {\n        body\n        fromAddress\n        id\n        read\n        receivedAt\n        subject\n      }\n    }\n  }\n`;\n\nconst SubscriptionsList: React.FC = () => {\n  const { selectedSubscription } = useSelectedSubscription();\n  const { setSelectedEmail } = useSelectedEmail();\n  const subscriptionId = selectedSubscription ? selectedSubscription.id : '';\n\n  return (\n      <EmailsList\n        subscription={selectedSubscription}\n        onEmailClick={setSelectedEmail}\n        query={query}\n        queryVars={{ variables: { subscriptionId } }}\n      />\n  )\n};\n\nexport default SubscriptionsList;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/welcome/ProfileForm.tsx",["383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398"],"import React from 'react';\nimport { Formik } from 'formik';\nimport { Box, FormField, Text, Button, TextInput, CheckBox, Anchor } from 'grommet';\nimport * as Yup from 'yup';\nimport { useMutation } from '@apollo/client';\n\nimport { onboardingSetUserProfile } from '../../graphql/mutations';\nimport Spinner from '../shared/Spinner';\n\nexport type FormFields = {\n  name: string;\n  subdomain: string;\n  agreeToTerms: boolean;\n}\n\ntype Props = {\n  values?: FormFields;\n  onSubmit: (values: FormFields) => void;\n}\n\n\nconst ProfileSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(4, 'Name must be longer')\n    .max(50, 'Name must be under 50 characters')\n    .required('Required'),\n  subdomain: Yup.string()\n    .matches(new RegExp(/^[a-z]+$/i), 'Subdomain must only include letters')\n    .min(4, 'Subdomain alias must must be at least 4 characters')\n    .max(16, 'Subdomain alias must be no more than 16 characters ')\n    .required('Required'),\n  agreeToTerms: Yup.bool().equals([true], 'You must agree to the terms and conditions').required()\n});\n\nconst ProfileForm: React.FC<Props> = (props) => {\n  const { values } = props\n  const [submitted, setSubmitted] = React.useState<boolean>(false);\n  const [onProfileSubmit] = useMutation(onboardingSetUserProfile);\n  return (\n    <Formik\n      enableReinitialize={true}\n      validationSchema={ProfileSchema}\n      initialValues={values || {} as FormFields}\n      validateOnBlur={true}\n      validateOnChange={submitted}\n      onSubmit={async (values, { setSubmitting, setFieldError }) => {\n        try {\n          setSubmitting(true);\n          await onProfileSubmit({ variables: { input: values } });\n          props.onSubmit(values);\n        } catch (error) {\n          setFieldError('subdomain', error.message)\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        values,\n        errors,\n        handleChange,\n        handleSubmit,\n        setFieldValue,\n        isSubmitting\n      }) => (\n        <form\n          onSubmit={event => {\n            event.preventDefault();\n            setSubmitted(true)\n            handleSubmit();\n          }}\n        >\n          <>\n            {isSubmitting ? (\n              <Box fill align=\"center\" justify=\"center\">\n                <Spinner />\n              </Box>\n            ) : (\n                <>\n                  <FormField\n                    margin=\"none\"\n                    label={<Text size=\"xsmall\">Name</Text>}\n                    error={errors.name}>\n                    <TextInput\n                      required\n                      name=\"name\"\n                      value={values.name || \"\"}\n                      onChange={handleChange}\n                    />\n                  </FormField>\n                  <FormField\n                    label={<Text size=\"xsmall\">Subdomain</Text>}\n                    error={errors.subdomain}>\n                    <Box direction=\"row\" align=\"center\">\n                      <Text margin={{ left: 'xsmall', right: \"xsmall\" }}>alias@</Text>\n                      <Box width=\"40%\">\n                        <TextInput\n                          name=\"subdomain\"\n                          value={values.subdomain || \"\"}\n                          onChange={handleChange}\n                          maxLength={12}\n                        />\n                      </Box>\n                      <Text margin={{ left: 'xsmall', right: \"xlarge\" }}>.thru.email</Text>\n                    </Box>\n                  </FormField>\n\n                  <Box background=\"light-3\" pad=\"small\">\n                    <Text size=\"small\">Once you choose your subdomain, you will not be able to change it. Choose wisely!</Text>\n                  </Box>\n\n                  <Box margin={{ vertical: \"medium\" }}>\n                    <CheckBox\n                      checked={values.agreeToTerms}\n                      label={<Text margin={{ left: 'none' }}>I agree to the <Anchor target=\"_blank\" href=\"https://sendthru.co/terms\">terms and conditions</Anchor>.</Text>}\n                      onChange={(event: any) => setFieldValue('agreeToTerms', event.target.checked ? true : false)}\n                    />\n                    {errors.agreeToTerms && <Text margin={{ top: 'medium' }} color=\"red\">{errors.agreeToTerms}</Text>}\n                  </Box>\n\n                  <Box\n                    tag=\"footer\"\n                    margin={{ top: \"small\" }}\n                    direction=\"row\"\n                    justify=\"end\"\n                  >\n                    <Button disabled={isSubmitting || Object.keys(errors).length > 0} size=\"small\" type=\"submit\" primary label=\"Continue\" />\n                  </Box>\n                </>\n              )}\n          </>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nProfileForm.defaultProps = {\n\n};\n\nProfileForm.propTypes = {\n\n};\n\nexport default ProfileForm;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/shared/string.ts",["399","400"],"\nexport const getInitialsFromWords = (str: string, maxLength?: number) => {\n  const words = str.trim().split(' ');\n\n  if (words.length === 1) {\n    return words[0][0].toUpperCase();\n  }\n\n  const letters = words.reduce((str, word) => `${str}${word[0]}`, '');\n\n  if (maxLength !== undefined) {\n    return letters.slice(0, maxLength);\n  }\n\n  return letters;\n}\n\n// export const getAvatarLetterUrl = (\n//   name: string,\n//   backgroundColor: string = 'ededed', textColor: string = '000'\n// ) => {\n//   if (!name) return '';\n\n//   let bg = backgroundColor;\n//   let text = textColor;\n\n//   if (bg.startsWith('#')) {\n\n//     bg = bg.substring(1);\n//   }\n//   if (text.startsWith('#')) {\n//     text = text.substring(1);\n//   }\n//   // const base = `https://ui-avatars.com/api/?background=${bg}&color=${text}&name=`\n//   return getInitialsFromWords(name, 2);\n// }\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/layout/AppBar.tsx",["401","402"],"import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, Heading, Menu, Nav } from 'grommet';\nimport { User } from 'grommet-icons';\nimport { RootState } from '../../store';\nimport { setMode } from '../../store/app/actions';\nimport Link from '../shared/Link';\nimport Config from '../../Config';\nimport ToggleLocale from '../shared/translation/ToggleLocale';\n\nimport AuthState from '../../store/auth/actions';\nconst AppBar: React.FC = () => {\n  const { isAuthenticated, profile } = useSelector((st: RootState) => st.auth);\n  const { mode } = useSelector((st: RootState) => st.app);\n  const dispatch = useDispatch();\n\n\n  const [menuOpen, setMenuOpen] = React.useState(false);\n  const handleSignoutClick = () => {\n    setMenuOpen(false);\n    dispatch(AuthState.actions.signOut());\n  }\n\n  return (\n    <Box\n      tag=\"header\"\n      direction='row'\n      align='center'\n      justify='between'\n      // background={{light: 'brand', dark: 'dark-2'}}\n      style={{ zIndex: 1 }}\n    >\n      <Link to=\"/\">\n        <Heading level=\"3\" margin=\"none\">\n          {Config.appName}\n        </Heading>\n      </Link>\n      <Box direction=\"row\" align=\"center\">\n        <Nav direction=\"row\">\n          <Link to=\"/\" i18n=\"layout.AppBar.home\">Home</Link>\n          {isAuthenticated && profile ? (\n            <Link to=\"/dashboard\" i18n=\"layout.AppBar.dashboard\">\n              Dashboard\n            </Link>\n          ) : (\n            <Link to=\"/login\" i18n=\"layout.AppBar.login\">\n              Login\n            </Link>\n          )}\n        </Nav>\n        <ToggleLocale />\n        {isAuthenticated && profile && (\n          <Menu\n            open={menuOpen}\n            margin=\"none\"\n            label={profile.name}\n            icon={<User />}\n            onClick={(e: any) => {\n              e.preventDefault();\n              setMenuOpen(true)\n            }}\n            items={[\n              { label: 'Profile', onClick: () => {setMenuOpen(false) } },\n              {\n                label: `${mode} Mode`, onClick: () => {\n                  dispatch(setMode(mode === 'light' ? 'dark' : 'light'))\n                  setMenuOpen(true)\n                }\n              },\n              { label: 'Signout', onClick: handleSignoutClick },\n            ]}\n          />\n        )}\n      </Box>\n    </Box>\n  )\n};\n\nAppBar.propTypes = {\n}\n\nexport default AppBar;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/store/app/actions.ts",[],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/hooks/auth/useProfile.tsx",[],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/store/auth/actions.ts",[],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/EmailsList.tsx",["403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423"],"import React from 'react';\nimport { Image, Box, InfiniteScroll, Heading, Text, Button, Menu } from 'grommet';\nimport { DocumentNode, useQuery, OperationVariables } from '@apollo/client';\nimport moment from 'moment';\nimport { useToasts } from 'react-toast-notifications';\nimport { BsThreeDotsVertical } from 'react-icons/bs';\n\nimport Spinner from '../shared/Spinner';\nimport EmailListItem from './EmailListItem';\nimport CopyableText from '../shared/CopyableText';\n\nimport { Email, Subscription, SubscriptionDictonary } from '../../shared/types';\nimport { listSubscriptionsQuery } from '../../graphql/queries';\nimport { subscriptionQuery } from '../../graphql/subscriptions';\n\nimport useSelectedEmail from '../../hooks/emails/useSelectedEmail';\nimport useProfile from 'hooks/auth/useProfile';\nimport Avatar from '../shared/Avatar';\n\ninterface Props {\n  subscription?: Subscription;\n  onEmailClick: (email: Email) => void;\n  query: DocumentNode\n  queryVars?: OperationVariables;\n}\n\nconst EmailsList: React.FC<Props> = (props) => {\n  const { onEmailClick, query, subscription, queryVars } = props;\n  const { profile } = useProfile()\n  const { selectedEmail } = useSelectedEmail();\n\n  const { loading, data, subscribeToMore } = useQuery(query, queryVars);\n  const { data: allSubscrpitions } = useQuery(listSubscriptionsQuery);\n  const { addToast } = useToasts()\n\n  const subscriptionsList = React.useMemo<SubscriptionDictonary>(() => {\n    if (!allSubscrpitions || !allSubscrpitions.listSubscriptions) return {} as SubscriptionDictonary;\n    return allSubscrpitions\n      .listSubscriptions\n      .items\n      .reduce(\n        (all: SubscriptionDictonary, sub: Subscription) => ({\n          ...all,\n          [sub.id]: sub\n        }),\n        {}\n      ) as SubscriptionDictonary;\n  }, [allSubscrpitions]);\n\n\n\n  React.useEffect(() => {\n    if (Object.keys(subscriptionsList).length) {\n\n      subscribeToMore({\n        document: subscriptionQuery,\n        variables: { userId: profile ? profile.id : '' },\n        updateQuery: (prev, { subscriptionData }) => {\n          if (!subscriptionData.data) return prev;\n          const newEmail = subscriptionData.data.onNewEmail.email;\n          const next = {\n            ...prev,\n            listEmails: {\n              ...prev.listEmails,\n              items: [newEmail, ...prev.listEmails.items]\n            }\n          }\n          addToast({ email: newEmail, subscription: subscriptionsList[newEmail.subscriptionId] || {} }, { appearance: 'info' });\n          return next;\n        }\n      })\n    }\n    // eslint-disable-next-line\n  }, [subscriptionsList]);\n\n  const emailsList = React.useMemo(() => {\n    if (!data || !data.listEmails) return [];\n\n    return [...data.listEmails.items].sort(\n      (a: Email, b: Email) => {\n        return new Date(b.receivedAt).getTime() - new Date(a.receivedAt).getTime()\n      }\n    )\n  }, [data]);\n\n  return (\n    <Box flex={false} overflow={{ vertical: 'auto' }}>\n      {subscription && (\n        <Box\n          flex\n          margin={{ horizontal: 'small' }}\n          border={{ side: 'horizontal', color: \"light-2\" }}\n          pad={{ horizontal: 'small', vertical: 'medium' }}\n        >\n          <Box direction=\"row\" justify=\"between\">\n            <Box>\n              <Box flex direction=\"row\" align=\"center\" margin={{ bottom: 'medium' }}>\n                <Avatar\n                  margin={{ right: 'small' }}\n                  size=\"medium\"\n                  name={subscription.name}\n                  url={subscription.iconUrl}\n                  color={subscription.color}\n                />\n                <Box flex>\n                  <Heading level=\"6\" margin=\"none\">{subscription.name}</Heading>\n                  <CopyableText\n                    textProps={{ size: 'small' }}\n                    text={subscription.emailAddress}\n                  />\n                </Box>\n              </Box>\n            </Box>\n            <Box>\n              <Menu\n                dropProps={{\n                  align: { top: 'bottom', right: 'right' },\n                  elevation: 'xlarge',\n                }}\n                hoverIndicator\n                icon={<BsThreeDotsVertical size=\"24px\" />}\n                items={[\n                  { label: 'Edit', onClick: () => { } },\n                  { label: 'Delete', onClick: () => { } },\n                ]}\n              />\n              {/* <Box round=\"xlarge\" pad=\"small\" background=\"transparent\" hoverIndicator={{ color: 'red' }}>\n                <BsThreeDotsVertical />\n              </Box> */}\n            </Box>\n          </Box>\n          <Text size=\"small\">Subscribed since: {moment(subscription.registeredAt).format('MMM YYYY')}</Text>\n        </Box>\n      )\n      }\n\n      {\n        loading ? <Spinner /> : (\n          <>\n            {!emailsList.length ? (\n              <Box\n                flex\n                align=\"center\"\n                justify=\"center\"\n                margin={{ vertical: 'xlarge', horizontal: 'large' }}\n                pad=\"small\"\n                alignContent=\"center\"\n                background=\"light-2\"\n              >\n                <Heading level=\"4\" margin=\"none\">Waiting for emails</Heading>\n                <Text size=\"small\" margin=\"none\">There are no emails in this tray</Text>\n              </Box>\n            ) : (\n                <InfiniteScroll\n                  items={emailsList}\n                // onMore={() => fetchMore({})}\n                >\n                  {(email: Email) => (\n                    <EmailListItem\n                      key={email.id}\n                      email={email}\n                      // this is a bit confusing. It needs to be renamed better\n                      // if the list is loaded while viewing a specific subsciption\n                      // then don't pass it through to the card as the subscription\n                      // card is shown above the list. If it is not passed and we are\n                      // looking at generic list (unread/today etc) then provide the\n                      // subscription so the ui can display the subscription inline in\n                      // the card.\n                      subscription={subscription ? undefined : subscriptionsList[email.subscriptionId]}\n                      selected={selectedEmail?.id === email.id}\n                      onClick={(email: Email) => onEmailClick(email)}\n                    />\n                  )}\n                </InfiniteScroll>\n              )}\n          </>\n        )\n      }\n    </Box >\n  )\n};\n\nexport default EmailsList;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/ui/AnchorLink.tsx",["424","425","426"],"// Thanks to https://github.com/grommet/grommet/issues/3572#issuecomment-575887940\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Anchor, AnchorProps } from 'grommet/components/Anchor';\nimport { Link } from 'react-router-dom';\n\nconst AnchorLink: React.FC<AnchorLinkProps> = props => {\n  // return <Anchor as={Link} {...props} />\n  return <Anchor\n    as={({ colorProp, hasIcon, hasLabel, focus, ...p }) => <Link {...p} />}\n    {...props}\n  />\n}\n\nexport type AnchorLinkProps = { to: string; }\n  // & LinkProps //disabling this as it messes up the color prop\n  & AnchorProps\n  & Omit<JSX.IntrinsicElements['a'], 'color'>\n\nexport default AnchorLink;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/translation/index.ts",[],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/modal/NewSubscription.tsx",["427","428","429","430","431","432","433"],"import React from 'react';\nimport { Box } from 'grommet';\nimport { useMutation } from '@apollo/client';\n\nimport EditSubscriptionForm, { FormFields } from './EditSubscription';\nimport useSubscriptions from '../../../hooks/subscriptions/useSubscriptions';\nimport useToast from '../../../hooks/shared/useToast';\nimport { createSubscription } from '../../../graphql/mutations';\nimport { listSubscriptionsQuery } from 'graphql/queries';\nimport { SubscriptionsList } from 'shared/types';\n\ntype Props = {\n  onSubmit: () => void;\n};\n\nconst NewSubscription: React.FC<Props> = (props) => {\n  const { subscriptions } = useSubscriptions();\n  const toasts = useToast();\n\n  const [createSubscriptionMutation] = useMutation(createSubscription);\n\n  const handleCreateSubscription = async (subscription: FormFields) => {\n    const { iconUrl, ...restSubscription } = subscription;\n\n    await createSubscriptionMutation(\n      {\n        variables: { input: restSubscription },\n        update: (cache, { data: createSubscription }) => {\n          const data: SubscriptionsList | null = cache.readQuery({ query: listSubscriptionsQuery });\n          if (data) {\n            cache.writeQuery({\n              query: listSubscriptionsQuery,\n              data: {\n                listSubscriptions: [\n                  ...data.listSubscriptions.items,\n                  createSubscription\n                ]\n              }\n            });\n          }\n        }\n      });\n\n\n    toasts.success('New subscription created successfully');\n    props.onSubmit();\n  }\n\n  return (\n    <Box pad=\"medium\" animation=\"fadeIn\">\n      <EditSubscriptionForm\n        onSubmit={handleCreateSubscription}\n        icons={{}}\n        existingAliases={Object.values(subscriptions).map(sub => sub.emailAddress.split('@')[0])}\n        values={{\n          name: '',\n          alias: '',\n          iconUrl: '',\n          color: ''\n        }}\n      />\n    </Box>\n  );\n}\n\nNewSubscription.defaultProps = {\n\n};\n\nNewSubscription.propTypes = {\n\n};\n\nexport default NewSubscription;\n\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/hooks/subscriptions/useSelectedSubscription.tsx",[],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/graphql/mutations.tsx",[],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/SubscriptionsAccordion.tsx",["434","435","436","437"],"import React from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { Box, Heading, Text } from 'grommet';\nimport { useQuery } from '@apollo/client';\nimport { Subscription, SubscriptionsList } from '../../shared/types';\n\nimport Spinner from '../shared/Spinner';\nimport useSelectedSubscription from '../../hooks/subscriptions/useSelectedSubscription';\n\nimport { listSubscriptionsQuery } from '../../graphql/queries';\nimport Avatar from '../shared/Avatar';\n\nconst List = styled.ul`\n  margin-top: 0;\n  padding-left: 0;\n`\ninterface ListItemProps { readonly isActive: boolean };\n\nconst ListItem = styled.li<ListItemProps>`\n  display: flex;\n  flex-direction: row;\n  list-style-type: none;\n  margin-left: 0;\n  border-left: 3px solid transparent;\n\n  padding:  0.5rem;\n\n  &:hover {\n    cursor: pointer;\n    background: #ededed;\n  }\n\n  ${props => props.isActive && `\n    background #ededed;\n    border-left-color: #444444;\n  `}\n`;\n\ninterface Props {\n  // activeSubscription?: Subscription;\n  // onSubscriptionClick: (subscription: Subscription) => void;\n}\n\nconst SubscriptionsAccordion: React.FC<Props> = () => {\n  const history = useHistory();\n  const { selectedSubscription, setSelectedSubscription } = useSelectedSubscription()\n  const { loading, data } = useQuery<SubscriptionsList>(listSubscriptionsQuery);\n  console.log('data:', data)\n\n  if (data) {\n    data.listSubscriptions.items.forEach(it => {\n      if (it.color) console.log(it.name, 'has a color => ', it.color)\n    })\n  }\n\n  const setSelected = (subscription: Subscription) => {\n    setSelectedSubscription(subscription);\n    const slug = subscription.name.split('@')[0]\n    history.push(`/subscription/${slug}`);\n  };\n\n  return (\n    <>\n      <Heading level=\"5\" margin={{ left: 'small' }}>My Trays</Heading>\n      {loading ? <Spinner /> : (\n        <Box height=\"auto\" fill overflow=\"auto\">\n          <List>\n            {data && data.listSubscriptions.items.map((subscription) => (\n              <ListItem\n                key={subscription.id}\n                onClick={() => setSelected(subscription)}\n                isActive={selectedSubscription ? subscription.id === selectedSubscription.id : false}\n              >\n                <Avatar\n                  margin={{ right: 'small' }}\n                  size=\"small\"\n                  src={subscription.iconUrl}\n                  color={subscription.color}\n                  name={subscription.name}\n                />\n                <Box flex>\n                  <Text size=\"small\">{subscription.name}</Text>\n                </Box>\n              </ListItem>\n            ))}\n          </List>\n        </Box>\n      )}\n    </>\n  )\n}\n\nexport default SubscriptionsAccordion;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/translation/ToggleLocale.tsx",["438"],"import { Menu } from 'grommet';\nimport React from 'react';\nimport i18n, { EnabledLocales } from '../../../i18n';\n\nconst ToggleLocale: React.FC = () => {\n  const [selectedLocale, setLocale] = React.useState(i18n.language);\n\n  const handleLocaleChange = (locale: EnabledLocales) => {\n    if (locale === selectedLocale) {\n      return;\n    }\n\n    setLocale(locale);\n    i18n.changeLanguage(locale);\n  };\n\n  return (\n    <Menu\n      label={selectedLocale}\n      items={[\n        { label: 'English', onClick: () => handleLocaleChange('en') },\n        { label: 'French', onClick: () => handleLocaleChange('fr') },\n        { label: 'German', onClick: () => handleLocaleChange('de') },\n      ]}\n    />\n  )\n};\n\nexport default ToggleLocale;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/store/helpers.ts",["439","440","441","442","443"],"export function typedAction<T extends string>(type: T): { type: T };\nexport function typedAction<T extends string, P extends any>(\n  type: T,\n  payload: P\n): { type: T; payload: P };\nexport function typedAction(type: string, payload?: any) {\n  return { type, payload };\n}\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/graphql/subscriptions.tsx",["444"],"import { gql } from '@apollo/client';\n\nexport const subscriptionQuery = gql`\n  subscription MySubscription($userId: String!) {\n    onNewEmail(userId: $userId) {\n      email {\n        fromAddress\n        id\n        read\n        receivedAt\n        userId\n        subscriptionId\n        subject\n      }\n    }\n  }\n`;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/graphql/queries.tsx",["445"],"import { gql } from '@apollo/client';\n\nexport const listSubscriptionsQuery = gql`\n  query GetMySubscriptions {\n    listSubscriptions {\n      items {\n        id\n        emailAddress\n        registeredAt\n        status\n        name\n        iconUrl\n        url\n        color\n      }\n    }\n  }\n`;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/CopyableText.tsx",["446","447","448","449","450"],"import React from 'react';\nimport { Box, Text, TextProps } from 'grommet';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport styled from 'styled-components';\n\nimport ToolTip from './ToolTip';\ntype Props = {\n  text: string;\n  textProps?: TextProps;\n}\n\nconst HoverableBox = styled(Box)`\n  &:hover {\n    cursor: pointer\n  }\n`;\n\nconst CopyableText: React.FC<Props> = ({ text, textProps }) => {\n  const [copied, setCopied] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      setCopied(false);\n    }, 5000)\n  }, [copied])\n\n  return (\n    <Box onMouseLeave={() => setCopied(false)}>\n      <ToolTip message={copied ? 'copied!' : 'copy to clipboard'}>\n        <HoverableBox>\n          <CopyToClipboard text={text}\n            onCopy={() => setCopied(true)}>\n            <Text {...textProps}>\n              {text}\n            </Text>\n          </CopyToClipboard>\n        </HoverableBox>\n      </ToolTip>\n    </Box>\n  );\n}\n\nexport default CopyableText;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/EmailListItem.tsx",["451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471"],"import React from 'react';\nimport moment from 'moment';\nimport { useMutation } from '@apollo/client';\nimport { Box, Text } from 'grommet';\n\nimport { Email, Subscription } from '../../shared/types';\nimport { markEmailReadQuery } from '../../graphql/mutations';\n\nimport Pill from '../shared/ui/Pill';\nimport Avatar from '../shared/Avatar';\n\ntype Props = {\n  email: Email;\n  subscription?: Subscription;\n  selected?: boolean;\n  onClick: (email: Email) => void;\n}\n\nconst EmailListItem: React.FC<Props> = (props) => {\n  const {\n    email,\n    onClick,\n    subscription,\n    selected\n  } = props;\n\n  const [markEmailAsRead] = useMutation(markEmailReadQuery);\n\n  return (\n    <Box\n      onClick={() => {\n        onClick(email);\n\n        if (!email.read) {\n          markEmailAsRead({ variables: { id: email.id } });\n        }\n      }}\n      background={(selected || !email.read ? 'light-1' : undefined)}\n      key={email.id}\n      border={[\n        { side: 'horizontal', color: \"light-2\" },\n        { side: 'left', size: '5px', color: selected || !email.read ? 'brand' : 'transparent' }\n      ]}\n      pad=\"small\"\n    >\n      {subscription && (\n        <Box flex direction=\"row\" align=\"center\" margin={{ bottom: 'small' }}>\n          <Avatar\n            margin={{ right: 'xsmall' }}\n            size=\"small\"\n            color={subscription.color}\n            name={subscription.name}\n            url={subscription.iconUrl}\n          />\n          <Box flex>\n            <Text size=\"small\">{subscription.name}</Text>\n          </Box>\n        </Box>\n      )}\n      <Box alignSelf=\"start\">\n        <Text size=\"small\">\n          {moment(email.receivedAt) //.format()\n            .calendar({\n              sameDay: 'h:mm a',\n              lastDay: '[Yesterday at ] h:mm a',\n              lastWeek: 'dddd',\n              sameElse: 'MMM DD Do'\n            })\n          }\n        </Text>\n\n        <Text size=\"medium\" weight=\"bold\">{email.subject}</Text>\n\n        <Box flex direction=\"row\" margin={{ top: 'small' }}>\n          {moment(email.receivedAt).isAfter(moment().subtract(6, 'hours')) && <Pill label=\"New\" background=\"#41ae76\" margin={{ right: 'xsmall' }} />}\n          {!email.read && <Pill label=\"Unread\" background=\"brand\" />}\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default EmailListItem;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/ToolTip.tsx",["472","473","474","475","476"],"import React from 'react';\nimport { Box, Text } from 'grommet';\nimport { Tip } from 'grommet/components/Tip';\n\nconst TipContent = ({ message }: { message: string }) => (\n  <Box direction=\"row\" align=\"center\">\n    <svg viewBox=\"0 0 22 22\" version=\"1.1\" width=\"22px\" height=\"22px\">\n      <polygon\n        fill=\"grey\"\n        points=\"6 2 18 12 6 22\"\n        transform=\"matrix(-1 0 0 1 30 0)\"\n      />\n    </svg>\n    <Box background=\"dark-3\" direction=\"row\" pad=\"small\" round=\"xsmall\">\n      <Text color=\"white\">{message}</Text>\n    </Box>\n  </Box>\n);\n\ntype Props = {\n  message: string;\n}\n\nconst ToopTip: React.FC<Props> = (props) => {\n  return (\n    <Tip\n      dropProps={{ align: { left: 'right' } }}\n      content={<TipContent message={props.message} />}\n      plain\n    >\n      {props.children}\n    </Tip>\n  );\n}\n\nexport default ToopTip;\n",["477","478","479","480","481","482"],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/ui/Pill.tsx",["483","484","485","486","487","488"],"import React from 'react';\nimport { Box, Text } from 'grommet';\nimport { BackgroundType, ColorType, MarginType } from 'grommet/utils';\n\ntype Props = {\n  background?: BackgroundType;\n  label: string;\n  textColor?: ColorType;\n  margin?: MarginType;\n}\n\nconst Pill: React.FC<Props> = (props) => {\n  const { background, textColor, label, margin } = props;\n  return (\n    <Box elevation=\"xsmall\" background={background} round=\"xsmall\" align=\"center\" margin={margin} pad={{ horizontal: 'small' }}>\n      <Text size=\"xsmall\" color={textColor} weight=\"bold\">{label}</Text>\n    </Box>\n  );\n}\n\nPill.defaultProps = {\n  background: 'brand',\n  textColor: 'white'\n}\n\nexport default Pill;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/hooks/subscriptions/useSubscriptions.tsx",[],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/dashboard/modal/EditSubscription.tsx",["489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510"],"import React from 'react';\nimport { Formik, } from 'formik';\nimport { Box, Button, FormField, RadioButton, Text, TextInput } from 'grommet';\nimport * as Yup from 'yup';\nimport Avatar from '../../shared/Avatar';\nimport Spinner from '../../shared/Spinner';\nimport theme from '../../../theme';\n\nconst { colors } = theme.global;\nconsole.log('colors:', colors)\n\nexport type FormFields = {\n  name: string;\n  alias: string;\n  color: string;\n  iconUrl?: string;\n};\n\ntype Props = {\n  icons: { [key: string]: string };\n  onSubmit: (fields: FormFields) => void;\n  existingAliases: string[]\n  values?: FormFields;\n}\n\nconst SignupSchema = (existingAliases: string[]) => Yup.object().shape({\n  name: Yup.string()\n    .min(1, 'Name must be longer')\n    .max(50, 'Name must be under 50 characters')\n    .required('Required'),\n  alias: Yup.string()\n    .matches(new RegExp(/^[a-z0-9]+$/i), 'Address must only include numbers and letters')\n    .notOneOf(existingAliases, 'You already have already created this alias')\n    .min(4, 'Email alias must must be at least 4 characters')\n    .max(16, 'Email alias must be no more than 16 characters ')\n    .required('Required'),\n});\n\n\nconst EditSubscription: React.FC<Props> = (props) => {\n  const { existingAliases, values, icons } = props;\n  const [submitted, setSubmitted] = React.useState<boolean>(false);\n\n  return (\n    <Formik\n      enableReinitialize={true}\n      validationSchema={() => SignupSchema(existingAliases)}\n      initialValues={values || {} as FormFields}\n      validateOnBlur={true}\n      validateOnChange={submitted}\n      onSubmit={(values, { setSubmitting }) => {\n        setSubmitting(true);\n        props.onSubmit({\n          ...values,\n          alias: values.alias.toLowerCase()\n        })\n      }}\n    >\n      {({\n        values,\n        errors,\n        handleChange,\n        handleSubmit,\n        setFieldValue,\n        isSubmitting\n      }) => (\n        <form\n          onSubmit={event => {\n            event.preventDefault();\n            setSubmitted(true)\n            handleSubmit();\n          }}\n        >\n          <>\n            {isSubmitting ? (\n              <Box fill align=\"center\" justify=\"center\">\n                <Spinner />\n              </Box>\n            ) : (\n                <>\n                  {Object.keys(colors || {}).length ? (\n                    <FormField\n                      margin=\"none\"\n                      label={<Text size=\"xsmall\">Color</Text>}\n                      error={errors.name}>\n                      <Box direction=\"row\" margin={{ bottom: 'medium' }}>\n                        {Object.keys(colors).map((key: string) => typeof colors[key] === 'string' && (\n                          <Box key={key}\n                            hoverIndicator=\"brand\"\n                            round=\"xlarge\"\n                            pad=\"xsmall\"\n                            onClick={() => setFieldValue('color', colors[key])}\n                          >\n                            <Avatar\n                              // name={key}\n                              border={{color: values.color === colors[key] ? 'brand' : 'inherit', size: '4px'}}\n                              color={colors[key] as string}\n                              size=\"small\"\n                              margin={{ right: '0px' }}\n                            />\n                            {/* <RadioButton name=\"\" value={colors[key] as string} checked={values.iconUrl === colors[key]} onChange={(e) => { */}\n                          </Box>\n                        ))}\n                      </Box>\n                    </FormField>\n                  ) : null}\n\n                  <FormField\n                    margin=\"none\"\n                    label={<Text size=\"xsmall\">Name</Text>}\n                    error={errors.name}>\n                    <TextInput\n                      required\n                      name=\"name\"\n                      size=\"xsmall\"\n                      value={values.name || \"\"}\n                      onChange={handleChange}\n                    />\n                  </FormField>\n                  <FormField\n                    margin=\"none\"\n                    label={<Text size=\"xsmall\">Traylias</Text>}\n                    error={errors.alias}>\n                    <Box direction=\"row\" align=\"center\">\n                      <Box width=\"40%\">\n                        <TextInput\n                          size=\"xsmall\"\n                          name=\"alias\"\n                          value={values.alias || \"\"}\n                          onChange={handleChange}\n                          maxLength={12}\n                        />\n                      </Box>\n                      <Text margin={{ left: 'xsmall', right: \"xlarge\" }}>@cole.thru.email</Text>\n                    </Box>\n                  </FormField>\n\n                  <Box\n                    tag=\"footer\"\n                    margin={{ top: \"small\" }}\n                    direction=\"row\"\n                  // justify=\"between\"\n                  >\n                    <Button size=\"small\" type=\"submit\" primary label=\"Create\" />\n                  </Box>\n                </>\n              )}\n          </>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nEditSubscription.defaultProps = {\n  icons: {}\n};\n\nEditSubscription.propTypes = {\n};\n\nexport default EditSubscription;\n","/Users/colereid/Projects/readthe.news/readthenews-frontend/src/hooks/shared/useToast.tsx",[],"/Users/colereid/Projects/readthe.news/readthenews-frontend/src/components/shared/Link.tsx",["511"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport { Anchor } from 'grommet';\n\nimport Trans from './translation';\n\ninterface Props {\n  children: any;\n  i18n?: string;\n  to: string;\n}\n\nconst Link: React.FC<Props> = (props) => {\n  const { children, i18n, to } = props;\n  const history = useHistory();\n  const { t } = useTranslation();\n\n\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    history.push(to);\n  }\n\n  return (\n    <Anchor href={to} onClick={handleClick}>\n      <Trans t={t} i18nKey={i18n}>{children}</Trans>\n    </Anchor>\n  )\n}\n\nLink.defaultProps = {\n  i18n: undefined,\n};\n\nLink.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  i18n: PropTypes.string,\n  to: PropTypes.string.isRequired,\n};\n\nexport default Link;\n",{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"516","replacedBy":"517"},{"ruleId":"518","replacedBy":"519"},{"ruleId":"520","replacedBy":"521"},{"ruleId":"522","replacedBy":"523"},{"ruleId":"524","replacedBy":"525"},{"ruleId":"526","replacedBy":"527"},{"ruleId":"528","severity":2,"message":"529","line":24,"column":16,"nodeType":"514","messageId":"530","endLine":24,"endColumn":55},{"ruleId":"528","severity":2,"message":"529","line":25,"column":15,"nodeType":"514","messageId":"530","endLine":25,"endColumn":54},{"ruleId":"512","severity":2,"message":"531","line":47,"column":9,"nodeType":"514","messageId":"515","endLine":47,"endColumn":32},{"ruleId":"532","severity":1,"message":"533","line":52,"column":11,"nodeType":"534","messageId":"535","endLine":52,"endColumn":22},{"ruleId":"512","severity":2,"message":"536","line":59,"column":9,"nodeType":"514","messageId":"515","endLine":59,"endColumn":24},{"ruleId":"537","severity":2,"message":"538","line":69,"column":7,"nodeType":"514","messageId":"539","endLine":69,"endColumn":19},{"ruleId":"532","severity":1,"message":"533","line":80,"column":15,"nodeType":"534","messageId":"535","endLine":80,"endColumn":26},{"ruleId":"532","severity":1,"message":"533","line":93,"column":15,"nodeType":"534","messageId":"535","endLine":93,"endColumn":26},{"ruleId":"532","severity":1,"message":"533","line":105,"column":7,"nodeType":"534","messageId":"535","endLine":105,"endColumn":20},{"ruleId":"532","severity":1,"message":"533","line":133,"column":7,"nodeType":"534","messageId":"535","endLine":133,"endColumn":18},{"ruleId":"532","severity":1,"message":"533","line":146,"column":9,"nodeType":"534","messageId":"535","endLine":146,"endColumn":22},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"540","severity":2,"message":"541","line":21,"column":1,"nodeType":"542","endLine":21,"endColumn":49,"fix":"543"},{"ruleId":"544","severity":2,"message":"545","line":21,"column":21,"nodeType":"546","endLine":21,"endColumn":48},{"ruleId":"547","severity":2,"message":"548","line":3,"column":38,"nodeType":"546","endLine":3,"endColumn":47},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"528","severity":2,"message":"549","line":8,"column":36,"nodeType":"514","messageId":"530","endLine":8,"endColumn":41},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"550","severity":2,"message":"551","line":9,"column":20,"nodeType":"546","endLine":9,"endColumn":38,"fix":"552"},{"ruleId":"553","severity":2,"message":"554","line":31,"column":60,"nodeType":"534","endLine":31,"endColumn":76},{"ruleId":"555","severity":2,"message":"556","line":31,"column":66,"nodeType":"514","endLine":31,"endColumn":76},{"ruleId":"553","severity":2,"message":"554","line":34,"column":10,"nodeType":"534","endLine":34,"endColumn":24},{"ruleId":"555","severity":2,"message":"557","line":34,"column":16,"nodeType":"514","endLine":34,"endColumn":24},{"ruleId":"553","severity":2,"message":"554","line":41,"column":7,"nodeType":"534","endLine":41,"endColumn":23},{"ruleId":"555","severity":2,"message":"556","line":41,"column":13,"nodeType":"514","endLine":41,"endColumn":23},{"ruleId":"555","severity":2,"message":"558","line":42,"column":13,"nodeType":"559","endLine":42,"endColumn":20},{"ruleId":"555","severity":2,"message":"560","line":42,"column":22,"nodeType":"559","endLine":42,"endColumn":29},{"ruleId":"555","severity":2,"message":"557","line":42,"column":40,"nodeType":"514","endLine":42,"endColumn":48},{"ruleId":"561","severity":2,"message":"562","line":44,"column":21,"nodeType":"563","endLine":44,"endColumn":31},{"ruleId":"555","severity":2,"message":"556","line":44,"column":50,"nodeType":"514","endLine":44,"endColumn":60},{"ruleId":"555","severity":2,"message":"564","line":53,"column":11,"nodeType":"559","endLine":53,"endColumn":16},{"ruleId":"555","severity":2,"message":"565","line":53,"column":18,"nodeType":"559","endLine":53,"endColumn":30},{"ruleId":"553","severity":2,"message":"554","line":53,"column":35,"nodeType":"534","endLine":53,"endColumn":49},{"ruleId":"555","severity":2,"message":"557","line":53,"column":41,"nodeType":"514","endLine":53,"endColumn":49},{"ruleId":"555","severity":2,"message":"566","line":61,"column":31,"nodeType":"514","endLine":61,"endColumn":38},{"ruleId":"555","severity":2,"message":"567","line":62,"column":33,"nodeType":"514","endLine":62,"endColumn":38},{"ruleId":"555","severity":2,"message":"568","line":63,"column":32,"nodeType":"514","endLine":63,"endColumn":36},{"ruleId":"555","severity":2,"message":"568","line":66,"column":46,"nodeType":"514","endLine":66,"endColumn":50},{"ruleId":"553","severity":2,"message":"554","line":71,"column":62,"nodeType":"534","endLine":71,"endColumn":77},{"ruleId":"555","severity":2,"message":"569","line":71,"column":68,"nodeType":"514","endLine":71,"endColumn":77},{"ruleId":"555","severity":2,"message":"570","line":77,"column":25,"nodeType":"514","endLine":77,"endColumn":35},{"ruleId":"571","severity":2,"message":"572","line":77,"column":37,"nodeType":"573","messageId":"574","endLine":77,"endColumn":48,"fix":"575"},{"ruleId":"555","severity":2,"message":"576","line":87,"column":50,"nodeType":"514","endLine":87,"endColumn":57},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"561","severity":2,"message":"562","line":28,"column":20,"nodeType":"563","endLine":28,"endColumn":30},{"ruleId":"561","severity":2,"message":"562","line":29,"column":32,"nodeType":"563","endLine":29,"endColumn":42},{"ruleId":"561","severity":2,"message":"562","line":32,"column":17,"nodeType":"563","endLine":32,"endColumn":26},{"ruleId":"512","severity":2,"message":"513","line":3,"column":8,"nodeType":"514","messageId":"515","endLine":3,"endColumn":13},{"ruleId":"540","severity":2,"message":"577","line":4,"column":1,"nodeType":"542","endLine":4,"endColumn":50,"fix":"578"},{"ruleId":"544","severity":2,"message":"579","line":5,"column":20,"nodeType":"546","endLine":5,"endColumn":28},{"ruleId":"571","severity":2,"message":"572","line":71,"column":11,"nodeType":"573","messageId":"574","endLine":71,"endColumn":53,"fix":"580"},{"ruleId":"581","severity":2,"message":"582","line":74,"column":15,"nodeType":"514","messageId":"583","endLine":74,"endColumn":21},{"ruleId":"581","severity":2,"message":"582","line":75,"column":13,"nodeType":"514","messageId":"583","endLine":75,"endColumn":19},{"ruleId":"528","severity":2,"message":"584","line":78,"column":16,"nodeType":"514","messageId":"530","endLine":78,"endColumn":29},{"ruleId":"528","severity":2,"message":"585","line":84,"column":16,"nodeType":"514","messageId":"530","endLine":84,"endColumn":21},{"ruleId":"581","severity":2,"message":"582","line":87,"column":13,"nodeType":"514","messageId":"583","endLine":87,"endColumn":19},{"ruleId":"581","severity":2,"message":"582","line":88,"column":11,"nodeType":"514","messageId":"583","endLine":88,"endColumn":17},{"ruleId":"571","severity":2,"message":"572","line":10,"column":1,"nodeType":"573","messageId":"574","endLine":10,"endColumn":78,"fix":"586"},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"540","severity":2,"message":"587","line":3,"column":1,"nodeType":"542","endLine":3,"endColumn":78,"fix":"588"},{"ruleId":"544","severity":2,"message":"589","line":4,"column":24,"nodeType":"546","endLine":4,"endColumn":47},{"ruleId":"528","severity":2,"message":"549","line":9,"column":35,"nodeType":"514","messageId":"530","endLine":9,"endColumn":40},{"ruleId":"528","severity":2,"message":"590","line":36,"column":28,"nodeType":"514","messageId":"530","endLine":36,"endColumn":52},{"ruleId":"591","severity":2,"message":"592","line":59,"column":1,"nodeType":"593","messageId":"594","endLine":59,"endColumn":132},{"ruleId":"591","severity":2,"message":"595","line":60,"column":1,"nodeType":"593","messageId":"594","endLine":60,"endColumn":320},{"ruleId":"591","severity":2,"message":"596","line":62,"column":1,"nodeType":"593","messageId":"594","endLine":62,"endColumn":122},{"ruleId":"591","severity":2,"message":"597","line":65,"column":1,"nodeType":"593","messageId":"594","endLine":65,"endColumn":161},{"ruleId":"591","severity":2,"message":"598","line":66,"column":1,"nodeType":"593","messageId":"594","endLine":66,"endColumn":142},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"599","severity":2,"message":"600","line":3,"column":1,"nodeType":null,"fix":"601"},{"ruleId":"602","severity":2,"message":"603","line":20,"column":7,"nodeType":"514","messageId":"604","endLine":20,"endColumn":21},{"ruleId":"605","severity":1,"message":"603","line":20,"column":7,"nodeType":"514","messageId":"604","endLine":20,"endColumn":21},{"ruleId":"591","severity":2,"message":"606","line":29,"column":1,"nodeType":"593","messageId":"594","endLine":29,"endColumn":129},{"ruleId":"591","severity":2,"message":"607","line":34,"column":1,"nodeType":"593","messageId":"594","endLine":34,"endColumn":144},{"ruleId":"591","severity":2,"message":"608","line":35,"column":1,"nodeType":"593","messageId":"594","endLine":35,"endColumn":136},{"ruleId":"591","severity":2,"message":"609","line":41,"column":1,"nodeType":"593","messageId":"594","endLine":41,"endColumn":124},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"528","severity":2,"message":"610","line":5,"column":10,"nodeType":"514","messageId":"530","endLine":5,"endColumn":24},{"ruleId":"611","severity":1,"message":"610","line":5,"column":10,"nodeType":"514","messageId":"530","endLine":5,"endColumn":24},{"ruleId":"581","severity":2,"message":"612","line":7,"column":53,"nodeType":"514","messageId":"583","endLine":7,"endColumn":56},{"ruleId":"555","severity":2,"message":"613","line":16,"column":11,"nodeType":"559","endLine":16,"endColumn":15},{"ruleId":"555","severity":2,"message":"614","line":16,"column":17,"nodeType":"559","endLine":16,"endColumn":20},{"ruleId":"555","severity":2,"message":"615","line":16,"column":22,"nodeType":"559","endLine":16,"endColumn":27},{"ruleId":"561","severity":2,"message":"562","line":23,"column":7,"nodeType":"563","endLine":23,"endColumn":21},{"ruleId":"553","severity":2,"message":"554","line":27,"column":38,"nodeType":"534","endLine":27,"endColumn":48},{"ruleId":"555","severity":2,"message":"616","line":27,"column":44,"nodeType":"514","endLine":27,"endColumn":48},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"581","severity":2,"message":"612","line":8,"column":10,"nodeType":"514","messageId":"583","endLine":8,"endColumn":13},{"ruleId":"555","severity":2,"message":"557","line":16,"column":20,"nodeType":"559","endLine":16,"endColumn":28},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"555","severity":2,"message":"617","line":13,"column":20,"nodeType":"559","endLine":13,"endColumn":30},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"528","severity":2,"message":"618","line":22,"column":11,"nodeType":"514","messageId":"530","endLine":22,"endColumn":15},{"ruleId":"611","severity":1,"message":"618","line":22,"column":11,"nodeType":"514","messageId":"530","endLine":22,"endColumn":15},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"619","severity":1,"message":"620","line":8,"column":8,"nodeType":"621","endLine":8,"endColumn":15},{"ruleId":"528","severity":2,"message":"622","line":18,"column":14,"nodeType":"514","messageId":"530","endLine":18,"endColumn":32},{"ruleId":"555","severity":2,"message":"623","line":36,"column":11,"nodeType":"559","endLine":36,"endColumn":17},{"ruleId":"624","severity":2,"message":"625","line":41,"column":7,"nodeType":"626","endLine":41,"endColumn":32,"fix":"627"},{"ruleId":"624","severity":2,"message":"625","line":44,"column":7,"nodeType":"626","endLine":44,"endColumn":28,"fix":"628"},{"ruleId":"629","severity":2,"message":"630","line":46,"column":24,"nodeType":"514","messageId":"631","endLine":46,"endColumn":30},{"ruleId":"555","severity":2,"message":"632","line":50,"column":17,"nodeType":"514","endLine":50,"endColumn":25},{"ruleId":"629","severity":2,"message":"630","line":58,"column":9,"nodeType":"514","messageId":"631","endLine":58,"endColumn":15},{"ruleId":"555","severity":2,"message":"633","line":86,"column":37,"nodeType":"514","endLine":86,"endColumn":41},{"ruleId":"555","severity":2,"message":"634","line":98,"column":41,"nodeType":"514","endLine":98,"endColumn":50},{"ruleId":"591","severity":2,"message":"635","line":108,"column":1,"nodeType":"593","messageId":"594","endLine":108,"endColumn":128},{"ruleId":"555","severity":2,"message":"636","line":113,"column":39,"nodeType":"514","endLine":113,"endColumn":51},{"ruleId":"591","severity":2,"message":"637","line":114,"column":1,"nodeType":"593","messageId":"594","endLine":114,"endColumn":172},{"ruleId":"638","severity":2,"message":"639","line":115,"column":79,"nodeType":"640","messageId":"641","endLine":115,"endColumn":114,"fix":"642"},{"ruleId":"591","severity":2,"message":"643","line":126,"column":1,"nodeType":"593","messageId":"594","endLine":126,"endColumn":141},{"ruleId":"644","severity":2,"message":"645","line":2,"column":1,"nodeType":"646","endLine":16,"endColumn":2},{"ruleId":"629","severity":2,"message":"647","line":9,"column":33,"nodeType":"514","messageId":"631","endLine":9,"endColumn":36},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"599","severity":2,"message":"600","line":11,"column":1,"nodeType":null,"fix":"648"},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"528","severity":2,"message":"649","line":2,"column":10,"nodeType":"514","messageId":"530","endLine":2,"endColumn":15},{"ruleId":"611","severity":1,"message":"649","line":2,"column":10,"nodeType":"514","messageId":"530","endLine":2,"endColumn":15},{"ruleId":"528","severity":2,"message":"650","line":2,"column":53,"nodeType":"514","messageId":"530","endLine":2,"endColumn":59},{"ruleId":"611","severity":1,"message":"650","line":2,"column":53,"nodeType":"514","messageId":"530","endLine":2,"endColumn":59},{"ruleId":"619","severity":1,"message":"620","line":8,"column":8,"nodeType":"621","endLine":8,"endColumn":15},{"ruleId":"540","severity":2,"message":"651","line":17,"column":1,"nodeType":"542","endLine":17,"endColumn":48,"fix":"652"},{"ruleId":"544","severity":2,"message":"589","line":17,"column":24,"nodeType":"546","endLine":17,"endColumn":47},{"ruleId":"528","severity":2,"message":"653","line":22,"column":18,"nodeType":"514","messageId":"530","endLine":22,"endColumn":30},{"ruleId":"555","severity":2,"message":"654","line":28,"column":11,"nodeType":"559","endLine":28,"endColumn":23},{"ruleId":"555","severity":2,"message":"655","line":28,"column":25,"nodeType":"559","endLine":28,"endColumn":30},{"ruleId":"555","severity":2,"message":"656","line":28,"column":32,"nodeType":"559","endLine":28,"endColumn":44},{"ruleId":"555","severity":2,"message":"657","line":28,"column":46,"nodeType":"559","endLine":28,"endColumn":55},{"ruleId":"591","severity":2,"message":"606","line":68,"column":1,"nodeType":"593","messageId":"594","endLine":68,"endColumn":129},{"ruleId":"555","severity":2,"message":"658","line":101,"column":38,"nodeType":"514","endLine":101,"endColumn":42},{"ruleId":"555","severity":2,"message":"659","line":102,"column":37,"nodeType":"514","endLine":102,"endColumn":44},{"ruleId":"555","severity":2,"message":"660","line":103,"column":39,"nodeType":"514","endLine":103,"endColumn":44},{"ruleId":"555","severity":2,"message":"658","line":106,"column":66,"nodeType":"514","endLine":106,"endColumn":70},{"ruleId":"555","severity":2,"message":"661","line":109,"column":40,"nodeType":"514","endLine":109,"endColumn":52},{"ruleId":"555","severity":2,"message":"662","line":132,"column":69,"nodeType":"514","endLine":132,"endColumn":81},{"ruleId":"629","severity":2,"message":"663","line":171,"column":33,"nodeType":"514","messageId":"631","endLine":171,"endColumn":45},{"ruleId":"512","severity":2,"message":"513","line":3,"column":8,"nodeType":"514","messageId":"515","endLine":3,"endColumn":13},{"ruleId":"512","severity":2,"message":"664","line":7,"column":28,"nodeType":"514","messageId":"515","endLine":7,"endColumn":43},{"ruleId":"581","severity":2,"message":"612","line":18,"column":10,"nodeType":"514","messageId":"583","endLine":18,"endColumn":13},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"540","severity":2,"message":"665","line":9,"column":1,"nodeType":"542","endLine":9,"endColumn":58,"fix":"666"},{"ruleId":"544","severity":2,"message":"667","line":9,"column":40,"nodeType":"546","endLine":9,"endColumn":57},{"ruleId":"540","severity":2,"message":"668","line":10,"column":1,"nodeType":"542","endLine":10,"endColumn":50,"fix":"669"},{"ruleId":"544","severity":2,"message":"670","line":10,"column":35,"nodeType":"546","endLine":10,"endColumn":49},{"ruleId":"629","severity":2,"message":"671","line":28,"column":33,"nodeType":"514","messageId":"631","endLine":28,"endColumn":51},{"ruleId":"555","severity":2,"message":"632","line":46,"column":11,"nodeType":"514","endLine":46,"endColumn":19},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"619","severity":1,"message":"620","line":8,"column":8,"nodeType":"621","endLine":8,"endColumn":15},{"ruleId":"532","severity":1,"message":"533","line":49,"column":3,"nodeType":"534","messageId":"535","endLine":49,"endColumn":14},{"ruleId":"532","severity":1,"message":"533","line":53,"column":21,"nodeType":"534","messageId":"535","endLine":53,"endColumn":32},{"ruleId":"512","severity":2,"message":"513","line":2,"column":8,"nodeType":"514","messageId":"515","endLine":2,"endColumn":13},{"ruleId":"528","severity":2,"message":"672","line":1,"column":47,"nodeType":"514","messageId":"530","endLine":1,"endColumn":54},{"ruleId":"602","severity":2,"message":"673","line":2,"column":17,"nodeType":"514","messageId":"604","endLine":2,"endColumn":28},{"ruleId":"528","severity":2,"message":"672","line":3,"column":3,"nodeType":"514","messageId":"530","endLine":3,"endColumn":10},{"ruleId":"528","severity":2,"message":"674","line":4,"column":3,"nodeType":"514","messageId":"530","endLine":4,"endColumn":13},{"ruleId":"602","severity":2,"message":"673","line":6,"column":17,"nodeType":"514","messageId":"604","endLine":6,"endColumn":28},{"ruleId":"644","severity":2,"message":"645","line":3,"column":1,"nodeType":"646","endLine":17,"endColumn":3},{"ruleId":"644","severity":2,"message":"645","line":3,"column":1,"nodeType":"646","endLine":18,"endColumn":3},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"599","severity":2,"message":"600","line":6,"column":1,"nodeType":null,"fix":"675"},{"ruleId":"555","severity":2,"message":"676","line":18,"column":42,"nodeType":"559","endLine":18,"endColumn":46},{"ruleId":"555","severity":2,"message":"677","line":18,"column":48,"nodeType":"559","endLine":18,"endColumn":57},{"ruleId":"561","severity":2,"message":"562","line":33,"column":19,"nodeType":"563","endLine":33,"endColumn":33},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"528","severity":2,"message":"653","line":16,"column":13,"nodeType":"514","messageId":"530","endLine":16,"endColumn":25},{"ruleId":"555","severity":2,"message":"678","line":21,"column":5,"nodeType":"559","endLine":21,"endColumn":10},{"ruleId":"555","severity":2,"message":"679","line":22,"column":5,"nodeType":"559","endLine":22,"endColumn":12},{"ruleId":"555","severity":2,"message":"656","line":23,"column":5,"nodeType":"559","endLine":23,"endColumn":17},{"ruleId":"555","severity":2,"message":"680","line":24,"column":5,"nodeType":"559","endLine":24,"endColumn":13},{"ruleId":"555","severity":2,"message":"681","line":34,"column":20,"nodeType":"514","endLine":34,"endColumn":24},{"ruleId":"555","severity":2,"message":"682","line":35,"column":52,"nodeType":"514","endLine":35,"endColumn":54},{"ruleId":"555","severity":2,"message":"681","line":38,"column":39,"nodeType":"514","endLine":38,"endColumn":43},{"ruleId":"555","severity":2,"message":"682","line":39,"column":18,"nodeType":"514","endLine":39,"endColumn":20},{"ruleId":"555","severity":2,"message":"681","line":42,"column":64,"nodeType":"514","endLine":42,"endColumn":68},{"ruleId":"555","severity":2,"message":"660","line":51,"column":33,"nodeType":"514","endLine":51,"endColumn":38},{"ruleId":"555","severity":2,"message":"658","line":52,"column":32,"nodeType":"514","endLine":52,"endColumn":36},{"ruleId":"555","severity":2,"message":"659","line":53,"column":31,"nodeType":"514","endLine":53,"endColumn":38},{"ruleId":"555","severity":2,"message":"658","line":56,"column":46,"nodeType":"514","endLine":56,"endColumn":50},{"ruleId":"555","severity":2,"message":"683","line":62,"column":25,"nodeType":"514","endLine":62,"endColumn":35},{"ruleId":"571","severity":2,"message":"572","line":62,"column":37,"nodeType":"573","messageId":"574","endLine":62,"endColumn":48,"fix":"684"},{"ruleId":"555","severity":2,"message":"685","line":72,"column":50,"nodeType":"514","endLine":72,"endColumn":57},{"ruleId":"591","severity":2,"message":"686","line":75,"column":1,"nodeType":"593","messageId":"594","endLine":75,"endColumn":150},{"ruleId":"555","severity":2,"message":"683","line":75,"column":25,"nodeType":"514","endLine":75,"endColumn":35},{"ruleId":"555","severity":2,"message":"681","line":76,"column":19,"nodeType":"514","endLine":76,"endColumn":23},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"553","severity":2,"message":"554","line":28,"column":37,"nodeType":"534","endLine":28,"endColumn":50},{"ruleId":"555","severity":2,"message":"687","line":28,"column":43,"nodeType":"514","endLine":28,"endColumn":50},{"ruleId":"553","severity":2,"message":"554","line":31,"column":8,"nodeType":"534","endLine":31,"endColumn":22},{"ruleId":"555","severity":2,"message":"557","line":31,"column":14,"nodeType":"514","endLine":31,"endColumn":22},{"ruleId":"516","replacedBy":"688"},{"ruleId":"518","replacedBy":"689"},{"ruleId":"520","replacedBy":"690"},{"ruleId":"522","replacedBy":"691"},{"ruleId":"524","replacedBy":"692"},{"ruleId":"526","replacedBy":"693"},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"555","severity":2,"message":"694","line":13,"column":11,"nodeType":"559","endLine":13,"endColumn":21},{"ruleId":"555","severity":2,"message":"695","line":13,"column":23,"nodeType":"559","endLine":13,"endColumn":32},{"ruleId":"555","severity":2,"message":"696","line":13,"column":34,"nodeType":"559","endLine":13,"endColumn":39},{"ruleId":"555","severity":2,"message":"697","line":13,"column":41,"nodeType":"559","endLine":13,"endColumn":47},{"ruleId":"591","severity":2,"message":"606","line":15,"column":1,"nodeType":"593","messageId":"594","endLine":15,"endColumn":129},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},{"ruleId":"528","severity":2,"message":"698","line":3,"column":34,"nodeType":"514","messageId":"530","endLine":3,"endColumn":45},{"ruleId":"611","severity":1,"message":"698","line":3,"column":34,"nodeType":"514","messageId":"530","endLine":3,"endColumn":45},{"ruleId":"619","severity":1,"message":"620","line":6,"column":8,"nodeType":"621","endLine":6,"endColumn":15},{"ruleId":"532","severity":1,"message":"533","line":10,"column":1,"nodeType":"534","messageId":"535","endLine":10,"endColumn":12},{"ruleId":"528","severity":2,"message":"699","line":21,"column":14,"nodeType":"514","messageId":"530","endLine":21,"endColumn":32},{"ruleId":"555","severity":2,"message":"700","line":41,"column":11,"nodeType":"559","endLine":41,"endColumn":26},{"ruleId":"555","severity":2,"message":"623","line":41,"column":28,"nodeType":"559","endLine":41,"endColumn":34},{"ruleId":"555","severity":2,"message":"701","line":41,"column":36,"nodeType":"559","endLine":41,"endColumn":41},{"ruleId":"528","severity":2,"message":"702","line":41,"column":36,"nodeType":"514","messageId":"530","endLine":41,"endColumn":41},{"ruleId":"611","severity":1,"message":"702","line":41,"column":36,"nodeType":"514","messageId":"530","endLine":41,"endColumn":41},{"ruleId":"624","severity":2,"message":"625","line":46,"column":7,"nodeType":"626","endLine":46,"endColumn":32,"fix":"703"},{"ruleId":"624","severity":2,"message":"625","line":49,"column":7,"nodeType":"626","endLine":49,"endColumn":28,"fix":"704"},{"ruleId":"629","severity":2,"message":"630","line":51,"column":18,"nodeType":"514","messageId":"631","endLine":51,"endColumn":24},{"ruleId":"555","severity":2,"message":"632","line":53,"column":15,"nodeType":"514","endLine":53,"endColumn":23},{"ruleId":"555","severity":2,"message":"705","line":55,"column":25,"nodeType":"514","endLine":55,"endColumn":30},{"ruleId":"555","severity":2,"message":"706","line":55,"column":31,"nodeType":"514","endLine":55,"endColumn":42},{"ruleId":"629","severity":2,"message":"630","line":60,"column":9,"nodeType":"514","messageId":"631","endLine":60,"endColumn":15},{"ruleId":"555","severity":2,"message":"707","line":96,"column":54,"nodeType":"514","endLine":96,"endColumn":59},{"ruleId":"591","severity":2,"message":"708","line":101,"column":1,"nodeType":"593","messageId":"594","endLine":101,"endColumn":147},{"ruleId":"555","severity":2,"message":"633","line":116,"column":37,"nodeType":"514","endLine":116,"endColumn":41},{"ruleId":"555","severity":2,"message":"705","line":129,"column":41,"nodeType":"514","endLine":129,"endColumn":46},{"ruleId":"512","severity":2,"message":"513","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":13},"no-use-before-define","'React' was used before it was defined.","Identifier","usedBeforeDefined","jsx-a11y/accessible-emoji",[],"lines-around-directive",["709"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'registration' is defined but never used.","unusedVar","'checkValidServiceWorker' was used before it was defined.","no-console","Unexpected console statement.","MemberExpression","unexpected","'registerValidSW' was used before it was defined.","no-param-reassign","Assignment to property of function parameter 'registration'.","assignmentToFunctionParamProp","import/order","`components/shared/Spinner` import should occur before import of `./hooks/auth/useAmplifyAuth`","ImportDeclaration",{"range":"710","text":"711"},"import/no-unresolved","Unable to resolve path to module 'components/shared/Spinner'.","Literal","import/no-extraneous-dependencies","'history' should be listed in the project's dependencies. Run 'npm i -S history' to add it","'props' is defined but never used.","import/no-useless-path-segments","Useless path segments for \"../shared/Avatar\", should be \"./Avatar\"",{"range":"712","text":"713"},"react/destructuring-assignment","Must use destructuring props assignment","react/prop-types","'appearance' is missing in props validation","'children' is missing in props validation","'children.heading' is missing in props validation","Property","'children.message' is missing in props validation","react/jsx-props-no-spreading","Prop spreading is forbidden","JSXSpreadAttribute","'children.email' is missing in props validation","'children.subscription' is missing in props validation","'children.subscription.iconUrl' is missing in props validation","'children.subscription.color' is missing in props validation","'children.subscription.name' is missing in props validation","'onDismiss' is missing in props validation","'children.email.receivedAt' is missing in props validation","spaced-comment","Expected exception block, space or tab after '//' in comment.","Line","expectedExceptionAfter",{"range":"714","text":"715"},"'children.email.subject' is missing in props validation","`../../shared/amplify` import should occur after import of `react-router-dom`",{"range":"716","text":"717"},"Unable to resolve path to module 'Config'.",{"range":"718","text":"715"},"no-undef","'chrome' is not defined.","undef","'response' is defined but never used.","'error' is defined but never used.",{"range":"719","text":"715"},"`./ProfileForm` import should occur after import of `react-router-dom`",{"range":"720","text":"721"},"Unable to resolve path to module 'hooks/auth/useProfile'.","'input' is defined but never used.","max-len","This line has a length of 131. Maximum allowed is 120.","Program","max","This line has a length of 319. Maximum allowed is 120.","This line has a length of 121. Maximum allowed is 120.","This line has a length of 160. Maximum allowed is 120.","This line has a length of 141. Maximum allowed is 120.","import/newline-after-import","Expected 1 empty line after import statement not followed by another import.",{"range":"722","text":"723"},"no-redeclare","'Config' is already defined.","redeclared","@typescript-eslint/no-redeclare","This line has a length of 128. Maximum allowed is 120.","This line has a length of 143. Maximum allowed is 120.","This line has a length of 135. Maximum allowed is 120.","This line has a length of 123. Maximum allowed is 120.","'randomProperty' is defined but never used.","@typescript-eslint/no-unused-vars","'JSX' is not defined.","'name' is missing in props validation","'url' is missing in props validation","'color' is missing in props validation","'size' is missing in props validation","'i18nValues' is missing in props validation","'mode' is assigned a value but never used.","import/no-named-as-default","Using exported name 'Spinner' as identifier for default export.","ImportDefaultSpecifier","'values' is defined but never used.","'values' is missing in props validation","react/jsx-boolean-value","Value must be omitted for boolean attributes","JSXAttribute",{"range":"724","text":"725"},{"range":"726","text":"725"},"no-shadow","'values' is already declared in the upper scope.","noShadow","'onSubmit' is missing in props validation","'values.name' is missing in props validation","'values.subdomain' is missing in props validation","This line has a length of 127. Maximum allowed is 120.","'values.agreeToTerms' is missing in props validation","This line has a length of 171. Maximum allowed is 120.","no-unneeded-ternary","Unnecessary use of boolean literals in conditional expression.","ConditionalExpression","unnecessaryConditionalExpression",{"range":"727","text":"728"},"This line has a length of 140. Maximum allowed is 120.","import/prefer-default-export","Prefer default export.","ExportNamedDeclaration","'str' is already declared in the upper scope.",{"range":"729","text":"723"},"'Image' is defined but never used.","'Button' is defined but never used.","`hooks/auth/useProfile` import should occur before import of `../shared/Spinner`",{"range":"730","text":"731"},"'email' is defined but never used.","'onEmailClick' is missing in props validation","'query' is missing in props validation","'subscription' is missing in props validation","'queryVars' is missing in props validation","'subscription.name' is missing in props validation","'subscription.iconUrl' is missing in props validation","'subscription.color' is missing in props validation","'subscription.emailAddress' is missing in props validation","'subscription.registeredAt' is missing in props validation","'email' is already declared in the upper scope.","'AnchorLinkProps' was used before it was defined.","`graphql/queries` import should occur before import of `./EditSubscription`",{"range":"732","text":"733"},"Unable to resolve path to module 'graphql/queries'.","`shared/types` import should occur before import of `./EditSubscription`",{"range":"734","text":"735"},"Unable to resolve path to module 'shared/types'.","'createSubscription' is already declared in the upper scope.","'type' is defined but never used.","'typedAction' is already defined.","'payload' is defined but never used.",{"range":"736","text":"723"},"'text' is missing in props validation","'textProps' is missing in props validation","'email' is missing in props validation","'onClick' is missing in props validation","'selected' is missing in props validation","'email.read' is missing in props validation","'email.id' is missing in props validation","'email.receivedAt' is missing in props validation",{"range":"737","text":"715"},"'email.subject' is missing in props validation","This line has a length of 149. Maximum allowed is 120.","'message' is missing in props validation",[],["709"],[],[],[],[],"'background' is missing in props validation","'textColor' is missing in props validation","'label' is missing in props validation","'margin' is missing in props validation","'RadioButton' is defined but never used.","'fields' is defined but never used.","'existingAliases' is missing in props validation","'icons' is missing in props validation","'icons' is assigned a value but never used.",{"range":"738","text":"725"},{"range":"739","text":"725"},"'values.alias' is missing in props validation","'values.alias.toLowerCase' is missing in props validation","'values.color' is missing in props validation","This line has a length of 146. Maximum allowed is 120.","padding-line-between-statements",[280,812],"import Spinner from 'components/shared/Spinner';\nimport useAmplifyAuth from './hooks/auth/useAmplifyAuth';\nimport AuthenticatedRoute from './components/auth/AuthenticatedRoute';\nimport Dashboard from './components/dashboard';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Welcome from './components/welcome';\n\nimport { RootState } from './store';\nimport theme from './theme';\nimport client from './shared/apollo';\n\nimport ToastMessage from './components/shared/ToastMessage'\n",[308,326],"\"./Avatar\"",[2146,2146]," ",[119,245],"import Config from 'Config';\nimport { useHistory } from 'react-router-dom';\nimport { Hub, Auth } from '../../shared/amplify';\n",[1905,1905],[306,306],[89,262],"import useProfile from 'hooks/auth/useProfile';\nimport { useHistory } from 'react-router-dom';\nimport ProfileForm, { FormFields as ProfileFormFields } from './ProfileForm';\n",[90,90],"\n",[1308,1315],"",[1424,1431],[4075,4110],"!!event.target.checked",[447,447],[326,791],"import useProfile from 'hooks/auth/useProfile';\nimport Spinner from '../shared/Spinner';\nimport EmailListItem from './EmailListItem';\nimport CopyableText from '../shared/CopyableText';\n\nimport { Email, Subscription, SubscriptionDictonary } from '../../shared/types';\nimport { listSubscriptionsQuery } from '../../graphql/queries';\nimport { subscriptionQuery } from '../../graphql/subscriptions';\n\nimport useSelectedEmail from '../../hooks/emails/useSelectedEmail';\n",[105,432],"import { listSubscriptionsQuery } from 'graphql/queries';\nimport EditSubscriptionForm, { FormFields } from './EditSubscription';\nimport useSubscriptions from '../../../hooks/subscriptions/useSubscriptions';\nimport useToast from '../../../hooks/shared/useToast';\nimport { createSubscription } from '../../../graphql/mutations';\n",[105,482],"import { SubscriptionsList } from 'shared/types';\nimport EditSubscriptionForm, { FormFields } from './EditSubscription';\nimport useSubscriptions from '../../../hooks/subscriptions/useSubscriptions';\nimport useToast from '../../../hooks/shared/useToast';\nimport { createSubscription } from '../../../graphql/mutations';\nimport { listSubscriptionsQuery } from 'graphql/queries';\n",[207,207],[1645,1645],[1382,1389],[1520,1527]]